{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\netin\\\\hotel_green\\\\frontend\\\\src\\\\pages\\\\recover_senha\\\\recoverPage.js\",\n  _s = $RefreshSig$();\nimport \"./recover.css\";\nimport React from \"react\";\nimport { Link } from 'react-router-dom'; //import para usar rotas\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RecoverPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [mensagem, setMensagem] = useState('');\n  const [carregando, setCarregando] = useState(false);\n  const verificarEmail = async () => {\n    setCarregando(true);\n    setMensagem('');\n    try {\n      const resposta = await fetch('http://localhost:8080/verificar-email', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const dados = await resposta.json();\n      if (dados.existe) {\n        setMensagem('✅ Email encontrado no sistema!');\n      } else {\n        setMensagem('❌ Email não encontrado.');\n      }\n    } catch (error) {\n      setMensagem('Erro ao verificar email.');\n    }\n    setCarregando(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email\",\n        children: [\"Informe seu Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"usuario\",\n          placeholder: \"Digite seu Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"email\",\n          onClick: verificarEmail,\n          children: \"Recuperar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(RecoverPage, \"MrrvNUopREClGB9WGqUTOIavWJw=\");\n_c = RecoverPage;\nexport default RecoverPage;\nvar _c;\n$RefreshReg$(_c, \"RecoverPage\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","RecoverPage","_s","email","setEmail","useState","mensagem","setMensagem","carregando","setCarregando","verificarEmail","resposta","fetch","method","headers","body","JSON","stringify","dados","json","existe","error","children","className","type","id","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/netin/hotel_green/frontend/src/pages/recover_senha/recoverPage.js"],"sourcesContent":["import \"./recover.css\";\r\nimport React from \"react\";\r\nimport { Link } from 'react-router-dom'; //import para usar rotas\r\n\r\nfunction RecoverPage() {\r\n    const [email, setEmail] = useState('');\r\n    const [mensagem, setMensagem] = useState('');\r\n    const [carregando, setCarregando] = useState(false);\r\n  \r\n    const verificarEmail = async () => {\r\n      setCarregando(true);\r\n      setMensagem('');\r\n  \r\n      try {\r\n        const resposta = await fetch('http://localhost:8080/verificar-email', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ email }),\r\n        });\r\n  \r\n        const dados = await resposta.json();\r\n        if (dados.existe) {\r\n          setMensagem('✅ Email encontrado no sistema!');\r\n        } else {\r\n          setMensagem('❌ Email não encontrado.');\r\n        }\r\n      } catch (error) {\r\n        setMensagem('Erro ao verificar email.');\r\n      }\r\n  \r\n      setCarregando(false);\r\n    };\r\n    return(\r\n        <>\r\n            <main className=\"page\">\r\n                <div className=\"email\">\r\n                    Informe seu Email\r\n                    <input type='email'\r\n                            id='usuario' \r\n                            placeholder='Digite seu Email' \r\n                            >\r\n                    </input>\r\n                    <button id='email' onClick={verificarEmail}>Recuperar</button>\r\n                </div>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecoverPage"],"mappings":";;AAAA,OAAO,eAAe;AACtB,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMK,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjCD,aAAa,CAAC,IAAI,CAAC;IACnBF,WAAW,CAAC,EAAE,CAAC;IAEf,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEd;QAAM,CAAC;MAChC,CAAC,CAAC;MAEF,MAAMe,KAAK,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACnC,IAAID,KAAK,CAACE,MAAM,EAAE;QAChBb,WAAW,CAAC,gCAAgC,CAAC;MAC/C,CAAC,MAAM;QACLA,WAAW,CAAC,yBAAyB,CAAC;MACxC;IACF,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdd,WAAW,CAAC,0BAA0B,CAAC;IACzC;IAEAE,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EACD,oBACIX,OAAA,CAAAE,SAAA;IAAAsB,QAAA,eACIxB,OAAA;MAAMyB,SAAS,EAAC,MAAM;MAAAD,QAAA,eAClBxB,OAAA;QAAKyB,SAAS,EAAC,OAAO;QAAAD,QAAA,GAAC,mBAEnB,eAAAxB,OAAA;UAAO0B,IAAI,EAAC,OAAO;UACXC,EAAE,EAAC,SAAS;UACZC,WAAW,EAAC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE/B,CAAC,eACRhC,OAAA;UAAQ2B,EAAE,EAAC,OAAO;UAACM,OAAO,EAAErB,cAAe;UAAAY,QAAA,EAAC;QAAS;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC,gBACT,CAAC;AAEX;AAAC5B,EAAA,CA3CQD,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AA6CpB,eAAeA,WAAW;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}