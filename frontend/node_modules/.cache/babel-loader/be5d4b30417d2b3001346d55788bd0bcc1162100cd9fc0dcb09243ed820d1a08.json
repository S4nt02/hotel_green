{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import{API_URL}from'../url';// Criando o contexto\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();// Provedor do contexto\nexport const AuthProvider=_ref=>{let{children}=_ref;const[id,setId]=useState(null);const[autorizacao,setAutorizacao]=useState(null);const[carregando,setCarregando]=useState(true);// Função para verificar se o usuário está logado\nconst verificarLogin=async()=>{try{const resposta=await fetch(`${API_URL}/auth/verify`,{method:'GET',credentials:'include'// Isso garante que o cookie de sessão seja enviado\n});const data=await resposta.json();if(data.autenticado){setId(data.id);setAutorizacao(data.autorizacao);}else{setId(null);setAutorizacao(null);}}catch(erro){console.error('Erro ao verificar login:',erro);setId(null);setAutorizacao(null);}finally{setCarregando(false);}console.log(id);console.log(autorizacao);};// Verificando o login na montagem do componente\nuseEffect(()=>{verificarLogin();},[]);// Função para fazer o login\nconst login=async(email,senha)=>{try{const resposta=await fetch(`${API_URL}/login`,{method:'POST',headers:{'Content-Type':'application/json'},credentials:'include',// Garante que o cookie de sessão seja enviado\nbody:JSON.stringify({email,senha})});const data=await resposta.json();if(data.logado){setId(data.id);}else{console.error('Falha no login');}}catch(erro){console.error('Erro no login:',erro);}};// Função para fazer o logout\nconst logout=()=>{setId(null);fetch(`${API_URL}/logout`,{method:'POST',credentials:'include'// Garante que o cookie de sessão seja enviado\n});};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{id,login,logout,carregando,autorizacao},children:children});};// Hook para consumir o contexto\nexport const useAuth=()=>{return useContext(AuthContext);};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","API_URL","jsx","_jsx","AuthContext","AuthProvider","_ref","children","id","setId","autorizacao","setAutorizacao","carregando","setCarregando","verificarLogin","resposta","fetch","method","credentials","data","json","autenticado","erro","console","error","log","login","email","senha","headers","body","JSON","stringify","logado","logout","Provider","value","useAuth"],"sources":["C:/Users/andre/hotel_green/frontend/src/context/authContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { API_URL } from '../url';\r\n\r\n// Criando o contexto\r\nconst AuthContext = createContext();\r\n\r\n// Provedor do contexto\r\nexport const AuthProvider = ({ children }) => {\r\n  const [id, setId] = useState(null);\r\n  const [autorizacao, setAutorizacao] = useState(null)\r\n  const [carregando, setCarregando] = useState(true);\r\n\r\n  // Função para verificar se o usuário está logado\r\n  const verificarLogin = async () => {\r\n    try {\r\n      const resposta = await fetch(`${API_URL}/auth/verify`, {\r\n        method: 'GET',\r\n        credentials: 'include', // Isso garante que o cookie de sessão seja enviado\r\n      });\r\n      const data = await resposta.json();\r\n      if (data.autenticado) {\r\n        setId(data.id);\r\n        setAutorizacao(data.autorizacao)\r\n      } else {\r\n        setId(null);\r\n        setAutorizacao(null)\r\n      }\r\n    } catch (erro) {\r\n      console.error('Erro ao verificar login:', erro);\r\n      setId(null);\r\n      setAutorizacao(null)\r\n    } finally {\r\n      setCarregando(false);\r\n    }\r\n    console.log(id)\r\n    console.log(autorizacao)\r\n  };\r\n\r\n  // Verificando o login na montagem do componente\r\n  useEffect(() => {\r\n    verificarLogin();\r\n  }, []);\r\n\r\n  // Função para fazer o login\r\n  const login = async (email, senha) => {\r\n    try {\r\n      const resposta = await fetch(`${API_URL}/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include', // Garante que o cookie de sessão seja enviado\r\n        body: JSON.stringify({ email, senha }),\r\n      });\r\n\r\n      const data = await resposta.json();\r\n      if (data.logado) {\r\n        setId(data.id);\r\n      } else {\r\n        console.error('Falha no login');\r\n      }\r\n    } catch (erro) {\r\n      console.error('Erro no login:', erro);\r\n    }\r\n  };\r\n\r\n  // Função para fazer o logout\r\n  const logout = () => {\r\n    setId(null);\r\n    fetch(`${API_URL}/logout`, {\r\n      method: 'POST',\r\n      credentials: 'include', // Garante que o cookie de sessão seja enviado\r\n    });\r\n    \r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ id, login, logout, carregando, autorizacao }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para consumir o contexto\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}