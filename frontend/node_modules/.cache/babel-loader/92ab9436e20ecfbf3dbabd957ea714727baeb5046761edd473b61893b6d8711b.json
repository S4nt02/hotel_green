{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\hotel_green\\\\frontend\\\\src\\\\componetes\\\\recover_senha\\\\recoverPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./recover.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecoverPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [mensagem, setMensagem] = useState('');\n  const [carregando, setCarregando] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const abrirModal = () => setIsOpen(!isOpen);\n  const validarEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const verificarEmail = async () => {\n    setCarregando(true);\n    setMensagem('');\n    if (!validarEmail(email)) {\n      setMensagem('❌ Email inválido.');\n      setCarregando(false);\n      return;\n    }\n    try {\n      const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\n      const resposta = await fetch(`${API_URL}/recover_senha`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const dados = await resposta.json();\n      if (dados.sucesso) {\n        setMensagem('✅ Nova senha enviada para seu e-mail!');\n      } else if (dados.existe === false) {\n        setMensagem('❌ Email não encontrado.');\n      } else {\n        setMensagem('❌ Ocorreu um erro inesperado.');\n      }\n    } catch (error) {\n      setMensagem('❌ Erro ao verificar e enviar email.');\n    }\n    setCarregando(false);\n  };\n  const estilosMensagem = {\n    sucesso: {\n      color: 'green'\n    },\n    erro: {\n      color: 'red'\n    }\n  };\n  let tipoMensagem = 'erro';\n  if (mensagem.includes('Nova senha')) tipoMensagem = 'sucesso';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `container ${isOpen ? 'open' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recuperar Senha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Digite o email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: verificarEmail,\n      style: styles.button,\n      disabled: carregando,\n      children: carregando ? 'Enviando...' : 'Enviar nova senha'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: tipoMensagem === 'sucesso' ? estilosMensagem.sucesso : estilosMensagem.erro,\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(RecoverPage, \"AGHV5TGrEXoVa14kts50bsG/+Fs=\");\n_c = RecoverPage;\nexport default RecoverPage;\nvar _c;\n$RefreshReg$(_c, \"RecoverPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RecoverPage","_s","email","setEmail","mensagem","setMensagem","carregando","setCarregando","isOpen","setIsOpen","abrirModal","validarEmail","emailRegex","test","verificarEmail","API_URL","process","env","REACT_APP_API_URL","resposta","fetch","method","headers","body","JSON","stringify","dados","json","sucesso","existe","error","estilosMensagem","color","erro","tipoMensagem","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","style","styles","input","onClick","button","disabled","_c","$RefreshReg$"],"sources":["C:/Users/andre/hotel_green/frontend/src/componetes/recover_senha/recoverPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"./recover.css\"\r\n\r\nfunction RecoverPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [mensagem, setMensagem] = useState('');\r\n  const [carregando, setCarregando] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  const abrirModal = () => setIsOpen(!isOpen)\r\n\r\n\r\n  const validarEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const verificarEmail = async () => {\r\n    setCarregando(true);\r\n    setMensagem('');\r\n\r\n    if (!validarEmail(email)) {\r\n      setMensagem('❌ Email inválido.');\r\n      setCarregando(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\r\n      const resposta = await fetch(`${API_URL}/recover_senha`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      const dados = await resposta.json();\r\n\r\n      if (dados.sucesso) {\r\n        setMensagem('✅ Nova senha enviada para seu e-mail!');\r\n      } else if (dados.existe === false) {\r\n        setMensagem('❌ Email não encontrado.');\r\n      } else {\r\n        setMensagem('❌ Ocorreu um erro inesperado.');\r\n      }\r\n    } catch (error) {\r\n      setMensagem('❌ Erro ao verificar e enviar email.');\r\n    }\r\n\r\n    setCarregando(false);\r\n  };\r\n\r\n  const estilosMensagem = {\r\n    sucesso: { color: 'green' },\r\n    erro: { color: 'red' },\r\n  };\r\n\r\n  let tipoMensagem = 'erro';\r\n  if (mensagem.includes('Nova senha')) tipoMensagem = 'sucesso';\r\n\r\n  return (\r\n    <div className={`container ${isOpen ? 'open' : ''}`}>\r\n      <h2>Recuperar Senha</h2>\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Digite o email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        style={styles.input}\r\n      />\r\n      <button onClick={verificarEmail} style={styles.button} disabled={carregando}>\r\n        {carregando ? 'Enviando...' : 'Enviar nova senha'}\r\n      </button>\r\n      <p style={tipoMensagem === 'sucesso' ? estilosMensagem.sucesso : estilosMensagem.erro}>\r\n        {mensagem}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default RecoverPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}