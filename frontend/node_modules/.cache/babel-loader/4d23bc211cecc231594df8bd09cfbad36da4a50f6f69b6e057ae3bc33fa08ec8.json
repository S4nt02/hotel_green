{"ast":null,"code":"import React from'react';import{useEffect,useState}from'react';//import para recuperar dados do back\nimport{coerce,z}from'zod';import{zodResolver}from'@hookform/resolvers/zod';import{set,useForm}from'react-hook-form';import{API_URL}from'../../url';import{Key}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function CadCategoria(){const[categorias,setCategorias]=useEffect({});const validarCategoria=z.object({categoria:z.string().min(1,{message:\"O campo categoria não pode ser vazio\"})});const{register,handleSubmit,setValue,reset,watch,clearErrors,formState:{errors}}=useForm({resolver:zodResolver(validarCategoria)});const onError=errors=>{console.log(\"❌ Erros de validação:\");console.log(errors);};const cadastrarCategoria=async dados=>{try{const cadCategoria=await fetch(`${API_URL}/api/cadCategoria`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(dados)});if(!cadCategoria.sucesso){}reset({categoria:\"\"});}catch{}};const buscarCategoria=async()=>{try{const buscarCategoria=await fetch(`${API_URL}/api/buscarCategoria`);const dados=await buscarCategoria.json();setCategorias(dados);}catch{}};const editarCategoria=()=>{};const excluirCategoria=()=>{};useEffect(()=>{buscarCategoria();},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(cadastrarCategoria,onError),children:[/*#__PURE__*/_jsx(\"label\",{children:\"Adicionar Categoria\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Nome da categoria\",...register(\"categoria\")}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Adicionar\"}),errors.categoria&&/*#__PURE__*/_jsx(\"p\",{children:errors.categoria.message})]})}),/*#__PURE__*/_jsx(\"div\",{children:categorias.map(categoria=>/*#__PURE__*/_jsxs(\"div\",{children:[editar===false&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:categoria.nomeCategoria}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>editarCategoria(categoria.id),children:\"Editar\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>excluirCategoria(categoria.id),children:\"Excluir\"})]}),editar===true&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",...register('categoria')}),/*#__PURE__*/_jsx(\"button\",{onClick:cadastrarCategoria,children:\"Editar\"}),/*#__PURE__*/_jsx(\"button\",{onClick:excluirCategoria,children:\"Excluir\"})]})]}))})]});}export default CadCategoria;","map":{"version":3,"names":["React","useEffect","useState","coerce","z","zodResolver","set","useForm","API_URL","Key","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CadCategoria","categorias","setCategorias","validarCategoria","object","categoria","string","min","message","register","handleSubmit","setValue","reset","watch","clearErrors","formState","errors","resolver","onError","console","log","cadastrarCategoria","dados","cadCategoria","fetch","method","headers","body","JSON","stringify","sucesso","buscarCategoria","json","editarCategoria","excluirCategoria","children","onSubmit","type","placeholder","map","editar","nomeCategoria","onClick","id"],"sources":["C:/Users/andre/hotel_green/frontend/src/componetes/cad_categoria/cad_categoria.js"],"sourcesContent":["import React from 'react';\r\nimport { useEffect, useState } from 'react' //import para recuperar dados do back\r\nimport { coerce, z } from 'zod';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { set, useForm} from 'react-hook-form';\r\nimport { API_URL } from '../../url';\r\nimport { Key } from 'lucide-react';\r\n\r\nfunction CadCategoria (){\r\n\r\n    const [categorias, setCategorias] = useEffect({})\r\n    \r\n    const validarCategoria = z.object({\r\n        categoria : z.string().min(1, {message : \"O campo categoria não pode ser vazio\"})\r\n    })\r\n\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        setValue,\r\n        reset,\r\n        watch,\r\n        clearErrors,\r\n        formState: { errors }\r\n    } = useForm({\r\n        resolver: zodResolver(validarCategoria)\r\n    })\r\n\r\n    const onError = (errors) => {\r\n        console.log(\"❌ Erros de validação:\");\r\n        console.log(errors);\r\n    };\r\n\r\n    const cadastrarCategoria = async (dados) => {\r\n        try{\r\n            const cadCategoria = await fetch(`${API_URL}/api/cadCategoria`, {\r\n                method : 'POST',\r\n                headers : {\r\n                    'Content-Type' : 'application/json'\r\n                },\r\n                body : JSON.stringify(dados)\r\n            })\r\n\r\n            if(!cadCategoria.sucesso){\r\n\r\n            }\r\n\r\n            reset({\r\n                categoria : \"\"\r\n            })\r\n\r\n        }\r\n        catch{\r\n\r\n        }\r\n    }\r\n\r\n    const buscarCategoria = async () => {\r\n        try{\r\n            const buscarCategoria = await fetch(`${API_URL}/api/buscarCategoria`)\r\n            const dados = await buscarCategoria.json()\r\n\r\n            setCategorias(dados)\r\n        }\r\n        catch{\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const editarCategoria = () => {\r\n\r\n    }\r\n\r\n    const excluirCategoria = () => {\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        buscarCategoria()\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <div>\r\n                <form onSubmit={handleSubmit(cadastrarCategoria, onError)}>\r\n                    <label>Adicionar Categoria</label>\r\n                    <input type='text' placeholder='Nome da categoria' {...register(\"categoria\")}></input>\r\n                    <button type='submit'>Adicionar</button>\r\n                    {errors.categoria && <p>{errors.categoria.message}</p>}\r\n                </form>\r\n            </div>\r\n            <div>\r\n                {categorias.map(categoria => (\r\n                    <div>\r\n                       {editar === false && (\r\n                        <>\r\n                            <p>{categoria.nomeCategoria}</p>\r\n                            <button onClick={() => editarCategoria(categoria.id)}>Editar</button>\r\n                            <button onClick={() => excluirCategoria(categoria.id)}>Excluir</button>\r\n                        </>\r\n                       )}\r\n                       {editar === true && (\r\n                        <>\r\n                            <input type='text' {...register('categoria')}></input>\r\n                            <button onClick={cadastrarCategoria}>Editar</button>\r\n                            <button onClick={excluirCategoria}>Excluir</button>                        \r\n                        </>\r\n                       )} \r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CadCategoria"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}