{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\hotel_green\\\\frontend\\\\src\\\\componetes\\\\recover_senha\\\\recoverPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./recover.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RecoverPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [mensagem, setMensagem] = useState('');\n  const [carregando, setCarregando] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const abrirModal = () => setIsOpen(true);\n  const fecharModal = () => setIsOpen(false);\n  const validarEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const verificarEmail = async () => {\n    console.log(\"chamando\");\n    setCarregando(true);\n    setMensagem('');\n    if (!validarEmail(email)) {\n      setMensagem('❌ Email inválido.');\n      setCarregando(false);\n      return;\n    }\n    try {\n      const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\n      const resposta = await fetch(`${API_URL}/recover_senha`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const dados = await resposta.json();\n      if (dados.sucesso) {\n        setMensagem('✅ Nova senha enviada para seu e-mail!');\n      } else if (dados.existe === false) {\n        setMensagem('❌ Email não encontrado.');\n      } else {\n        setMensagem('❌ Ocorreu um erro inesperado.');\n      }\n    } catch (error) {\n      setMensagem('❌ Erro ao verificar e enviar email.');\n    }\n    setCarregando(false);\n  };\n  const estilosMensagem = {\n    sucesso: {\n      color: 'green'\n    },\n    erro: {\n      color: 'red'\n    }\n  };\n  let tipoMensagem = 'erro';\n  if (mensagem.includes('Nova senha')) tipoMensagem = 'sucesso';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      onClick: abrirModal,\n      children: \"Esqueceu sua senha?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `container ${isOpen ? 'open' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container_content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alinhar_fecharModal\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            onClick: fecharModal,\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alinhar_modal_content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Recuperar Senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Digite o email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: verificarEmail,\n            disabled: carregando,\n            children: carregando ? 'Enviando...' : 'Enviar nova senha'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: tipoMensagem === 'sucesso' ? estilosMensagem.sucesso : estilosMensagem.erro,\n            children: mensagem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true);\n}\n_s(RecoverPage, \"AGHV5TGrEXoVa14kts50bsG/+Fs=\");\n_c = RecoverPage;\nexport default RecoverPage;\nvar _c;\n$RefreshReg$(_c, \"RecoverPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","RecoverPage","_s","email","setEmail","mensagem","setMensagem","carregando","setCarregando","isOpen","setIsOpen","abrirModal","fecharModal","validarEmail","emailRegex","test","verificarEmail","console","log","API_URL","process","env","REACT_APP_API_URL","resposta","fetch","method","headers","body","JSON","stringify","dados","json","sucesso","existe","error","estilosMensagem","color","erro","tipoMensagem","includes","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","disabled","style","_c","$RefreshReg$"],"sources":["C:/Users/andre/hotel_green/frontend/src/componetes/recover_senha/recoverPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"./recover.css\"\r\n\r\nfunction RecoverPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [mensagem, setMensagem] = useState('');\r\n  const [carregando, setCarregando] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  \r\n\r\n  const abrirModal = () => setIsOpen(true)\r\n  const fecharModal = () => setIsOpen(false)\r\n\r\n  const validarEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const verificarEmail = async () => {\r\n    console.log(\"chamando\")\r\n    setCarregando(true);\r\n    setMensagem('');\r\n\r\n    if (!validarEmail(email)) {\r\n      setMensagem('❌ Email inválido.');\r\n      setCarregando(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\r\n      const resposta = await fetch(`${API_URL}/recover_senha`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      const dados = await resposta.json();\r\n\r\n      if (dados.sucesso) {\r\n        setMensagem('✅ Nova senha enviada para seu e-mail!');\r\n      } else if (dados.existe === false) {\r\n        setMensagem('❌ Email não encontrado.');\r\n      } else {\r\n        setMensagem('❌ Ocorreu um erro inesperado.');\r\n      }\r\n    } catch (error) {\r\n      setMensagem('❌ Erro ao verificar e enviar email.');\r\n    }\r\n\r\n    setCarregando(false);\r\n  };\r\n\r\n  const estilosMensagem = {\r\n    sucesso: { color: 'green' },\r\n    erro: { color: 'red' },\r\n  };\r\n\r\n  let tipoMensagem = 'erro';\r\n  if (mensagem.includes('Nova senha')) tipoMensagem = 'sucesso';\r\n\r\n  return (\r\n    <>\r\n      <h6 onClick={abrirModal}>Esqueceu sua senha?</h6>\r\n      {isOpen && <div className={`container ${isOpen ? 'open' : ''}`}>\r\n        <div className='container_content'>\r\n          <div className='alinhar_fecharModal'>\r\n            <h1 onClick={fecharModal}>x</h1>\r\n          </div>\r\n          <div className='alinhar_modal_content'>\r\n            <h2>Recuperar Senha</h2>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Digite o email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <button onClick={verificarEmail}  disabled={carregando}>\r\n              {carregando ? 'Enviando...' : 'Enviar nova senha'}\r\n            </button>\r\n            <p style={tipoMensagem === 'sucesso' ? estilosMensagem.sucesso : estilosMensagem.erro}>\r\n              {mensagem}\r\n            </p>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n      }\r\n    </>  \r\n  );\r\n}\r\n\r\n\r\nexport default RecoverPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}