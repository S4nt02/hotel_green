{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\hotel_green\\\\frontend\\\\src\\\\pages\\\\recover_senha\\\\recoverPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecoverPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [mensagem, setMensagem] = useState('');\n  const [carregando, setCarregando] = useState(false);\n  const validarEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const verificarEmail = async () => {\n    setCarregando(true);\n    setMensagem('');\n    if (!validarEmail(email)) {\n      setMensagem('❌ Email inválido.');\n      setCarregando(false);\n      return;\n    }\n    try {\n      const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\n      const resposta = await fetch(`${API_URL}/recover_senha`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const dados = await resposta.json();\n      if (dados.sucesso) {\n        setMensagem('✅ Nova senha enviada para seu e-mail!');\n      } else if (dados.existe === false) {\n        setMensagem('❌ Email não encontrado.');\n      } else {\n        setMensagem('❌ Ocorreu um erro inesperado.');\n      }\n    } catch (error) {\n      setMensagem('❌ Erro ao verificar e enviar email.');\n    }\n    setCarregando(false);\n  };\n  const estilosMensagem = {\n    sucesso: {\n      color: 'green'\n    },\n    erro: {\n      color: 'red'\n    }\n  };\n  let tipoMensagem = 'erro';\n  if (mensagem.includes('Nova senha')) tipoMensagem = 'sucesso';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recuperar Senha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Digite o email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: verificarEmail,\n      style: styles.button,\n      disabled: carregando,\n      children: carregando ? 'Enviando...' : 'Enviar nova senha'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: tipoMensagem === 'sucesso' ? estilosMensagem.sucesso : estilosMensagem.erro,\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(RecoverPage, \"MrrvNUopREClGB9WGqUTOIavWJw=\");\n_c = RecoverPage;\nconst styles = {\n  container: {\n    maxWidth: 400,\n    margin: '50px auto',\n    padding: 20,\n    border: '1px solid #ddd',\n    borderRadius: 10,\n    textAlign: 'center',\n    fontFamily: 'Arial'\n  },\n  input: {\n    width: '100%',\n    padding: 10,\n    fontSize: 16,\n    marginBottom: 10,\n    borderRadius: 5,\n    border: '1px solid #ccc'\n  },\n  button: {\n    padding: '10px 20px',\n    fontSize: 16,\n    borderRadius: 5,\n    backgroundColor: '#007bff',\n    color: 'white',\n    border: 'none',\n    cursor: 'pointer'\n  }\n};\nexport default RecoverPage;\nvar _c;\n$RefreshReg$(_c, \"RecoverPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RecoverPage","_s","email","setEmail","mensagem","setMensagem","carregando","setCarregando","validarEmail","emailRegex","test","verificarEmail","API_URL","process","env","REACT_APP_API_URL","resposta","fetch","method","headers","body","JSON","stringify","dados","json","sucesso","existe","error","estilosMensagem","color","erro","tipoMensagem","includes","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","input","onClick","button","disabled","_c","maxWidth","margin","padding","border","borderRadius","textAlign","fontFamily","width","fontSize","marginBottom","backgroundColor","cursor","$RefreshReg$"],"sources":["C:/Users/andre/hotel_green/frontend/src/pages/recover_senha/recoverPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction RecoverPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [mensagem, setMensagem] = useState('');\r\n  const [carregando, setCarregando] = useState(false);\r\n\r\n  const validarEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const verificarEmail = async () => {\r\n    setCarregando(true);\r\n    setMensagem('');\r\n\r\n    if (!validarEmail(email)) {\r\n      setMensagem('❌ Email inválido.');\r\n      setCarregando(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\r\n      const resposta = await fetch(`${API_URL}/recover_senha`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      const dados = await resposta.json();\r\n\r\n      if (dados.sucesso) {\r\n        setMensagem('✅ Nova senha enviada para seu e-mail!');\r\n      } else if (dados.existe === false) {\r\n        setMensagem('❌ Email não encontrado.');\r\n      } else {\r\n        setMensagem('❌ Ocorreu um erro inesperado.');\r\n      }\r\n    } catch (error) {\r\n      setMensagem('❌ Erro ao verificar e enviar email.');\r\n    }\r\n\r\n    setCarregando(false);\r\n  };\r\n\r\n  const estilosMensagem = {\r\n    sucesso: { color: 'green' },\r\n    erro: { color: 'red' },\r\n  };\r\n\r\n  let tipoMensagem = 'erro';\r\n  if (mensagem.includes('Nova senha')) tipoMensagem = 'sucesso';\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2>Recuperar Senha</h2>\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Digite o email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        style={styles.input}\r\n      />\r\n      <button onClick={verificarEmail} style={styles.button} disabled={carregando}>\r\n        {carregando ? 'Enviando...' : 'Enviar nova senha'}\r\n      </button>\r\n      <p style={tipoMensagem === 'sucesso' ? estilosMensagem.sucesso : estilosMensagem.erro}>\r\n        {mensagem}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    maxWidth: 400,\r\n    margin: '50px auto',\r\n    padding: 20,\r\n    border: '1px solid #ddd',\r\n    borderRadius: 10,\r\n    textAlign: 'center',\r\n    fontFamily: 'Arial',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    padding: 10,\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n    borderRadius: 5,\r\n    border: '1px solid #ccc',\r\n  },\r\n  button: {\r\n    padding: '10px 20px',\r\n    fontSize: 16,\r\n    borderRadius: 5,\r\n    backgroundColor: '#007bff',\r\n    color: 'white',\r\n    border: 'none',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nexport default RecoverPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}