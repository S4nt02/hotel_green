{"ast":null,"code":"import React from'react';import{useEffect,useState}from'react';//import para recuperar dados do back\nimport{coerce,z}from'zod';import{zodResolver}from'@hookform/resolvers/zod';import{set,useForm}from'react-hook-form';import{API_URL}from'../../url';import{Key}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function CadCategoria(){const validarCategoria=z.object({categoria:z.string().min(1,{message:\"O campo categoria não pode ser vazio\"})});const{register,handleSubmit,setValue,reset,watch,clearErrors,formState:{errors}}=useForm({resolver:zodResolver(validarCategoria)});const onError=errors=>{console.log(\"❌ Erros de validação:\");console.log(errors);};const cadastrarCategoria=async dados=>{try{const cadCategoria=await fetch(`${API_URL}/api/cadCategoria`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(dados)});if(!cadCategoria.sucesso){}}catch{}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(cadastrarCategoria,onError),children:[/*#__PURE__*/_jsx(\"label\",{children:\"Adicionar Categoria\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Nome da categoria\",...register(\"categoria\")}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Adicionar\"}),errors.categoria&&/*#__PURE__*/_jsx(\"p\",{children:errors.categoria.message})]})}),/*#__PURE__*/_jsx(\"div\",{})]});}export default CadCategoria;","map":{"version":3,"names":["React","useEffect","useState","coerce","z","zodResolver","set","useForm","API_URL","Key","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CadCategoria","validarCategoria","object","categoria","string","min","message","register","handleSubmit","setValue","reset","watch","clearErrors","formState","errors","resolver","onError","console","log","cadastrarCategoria","dados","cadCategoria","fetch","method","headers","body","JSON","stringify","sucesso","children","onSubmit","type","placeholder"],"sources":["C:/Users/andre/hotel_green/frontend/src/componetes/cad_categoria/cad_categoria.js"],"sourcesContent":["import React from 'react';\r\nimport { useEffect, useState } from 'react' //import para recuperar dados do back\r\nimport { coerce, z } from 'zod';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { set, useForm} from 'react-hook-form';\r\nimport { API_URL } from '../../url';\r\nimport { Key } from 'lucide-react';\r\n\r\nfunction CadCategoria (){\r\n    \r\n    const validarCategoria = z.object({\r\n        categoria : z.string().min(1, {message : \"O campo categoria não pode ser vazio\"})\r\n    })\r\n\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        setValue,\r\n        reset,\r\n        watch,\r\n        clearErrors,\r\n        formState: { errors }\r\n    } = useForm({\r\n        resolver: zodResolver(validarCategoria)\r\n    })\r\n\r\n    const onError = (errors) => {\r\n        console.log(\"❌ Erros de validação:\");\r\n        console.log(errors);\r\n    };\r\n\r\n    const cadastrarCategoria = async (dados) => {\r\n        try{\r\n            const cadCategoria = await fetch(`${API_URL}/api/cadCategoria`, {\r\n                method : 'POST',\r\n                headers : {\r\n                    'Content-Type' : 'application/json'\r\n                },\r\n                body : JSON.stringify(dados)\r\n            })\r\n\r\n            if(!cadCategoria.sucesso){\r\n\r\n            }\r\n\r\n        }\r\n        catch{\r\n\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div>\r\n                <form onSubmit={handleSubmit(cadastrarCategoria, onError)}>\r\n                    <label>Adicionar Categoria</label>\r\n                    <input type='text' placeholder='Nome da categoria' {...register(\"categoria\")}></input>\r\n                    <button type='submit'>Adicionar</button>\r\n                    {errors.categoria && <p>{errors.categoria.message}</p>}\r\n                </form>\r\n            </div>\r\n            <div>\r\n                {}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CadCategoria"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC;AAC5C,OAASC,MAAM,CAAEC,CAAC,KAAQ,KAAK,CAC/B,OAASC,WAAW,KAAQ,yBAAyB,CACrD,OAASC,GAAG,CAAEC,OAAO,KAAO,iBAAiB,CAC7C,OAASC,OAAO,KAAQ,WAAW,CACnC,OAASC,GAAG,KAAQ,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEnC,QAAS,CAAAC,YAAYA,CAAA,CAAG,CAEpB,KAAM,CAAAC,gBAAgB,CAAGb,CAAC,CAACc,MAAM,CAAC,CAC9BC,SAAS,CAAGf,CAAC,CAACgB,MAAM,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,CAAE,CAACC,OAAO,CAAG,sCAAsC,CAAC,CACpF,CAAC,CAAC,CAGF,KAAM,CACFC,QAAQ,CACRC,YAAY,CACZC,QAAQ,CACRC,KAAK,CACLC,KAAK,CACLC,WAAW,CACXC,SAAS,CAAE,CAAEC,MAAO,CACxB,CAAC,CAAGvB,OAAO,CAAC,CACRwB,QAAQ,CAAE1B,WAAW,CAACY,gBAAgB,CAC1C,CAAC,CAAC,CAEF,KAAM,CAAAe,OAAO,CAAIF,MAAM,EAAK,CACxBG,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC,CACpCD,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC,CACvB,CAAC,CAED,KAAM,CAAAK,kBAAkB,CAAG,KAAO,CAAAC,KAAK,EAAK,CACxC,GAAG,CACC,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAG9B,OAAO,mBAAmB,CAAE,CAC5D+B,MAAM,CAAG,MAAM,CACfC,OAAO,CAAG,CACN,cAAc,CAAG,kBACrB,CAAC,CACDC,IAAI,CAAGC,IAAI,CAACC,SAAS,CAACP,KAAK,CAC/B,CAAC,CAAC,CAEF,GAAG,CAACC,YAAY,CAACO,OAAO,CAAC,CAEzB,CAEJ,CACA,KAAK,CAEL,CACJ,CAAC,CAED,mBACI/B,KAAA,CAAAE,SAAA,EAAA8B,QAAA,eACIlC,IAAA,QAAAkC,QAAA,cACIhC,KAAA,SAAMiC,QAAQ,CAAEtB,YAAY,CAACW,kBAAkB,CAAEH,OAAO,CAAE,CAAAa,QAAA,eACtDlC,IAAA,UAAAkC,QAAA,CAAO,qBAAmB,CAAO,CAAC,cAClClC,IAAA,UAAOoC,IAAI,CAAC,MAAM,CAACC,WAAW,CAAC,mBAAmB,IAAKzB,QAAQ,CAAC,WAAW,CAAC,CAAS,CAAC,cACtFZ,IAAA,WAAQoC,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,WAAS,CAAQ,CAAC,CACvCf,MAAM,CAACX,SAAS,eAAIR,IAAA,MAAAkC,QAAA,CAAIf,MAAM,CAACX,SAAS,CAACG,OAAO,CAAI,CAAC,EACpD,CAAC,CACN,CAAC,cACNX,IAAA,SAEK,CAAC,EACR,CAAC,CAEX,CAEA,cAAe,CAAAK,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}