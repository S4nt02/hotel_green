{"ast":null,"code":"import{useEffect,useState}from\"react\";import{API_URL}from\"../../url\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Ocupacao(){const[sessao,setSessaso]=useState(1);const[unidades,setUnidades]=useState([]);const[acomodacaoOcupada,setAcomodacaoOcupada]=useState([]);const[acomodacoesDisponiveis,setAcomodacaoDisponiveis]=useState([]);const[acomodacoesReservadas,setAcomodacaoReservada]=useState([]);const[busca,setBusca]=useState(\"\");const[unidadeSelecionada,setUnidadeSelecionada]=useState(\"\");const hoje=new Date();const formatarData=data=>data.toISOString().split(\"T\")[0];const[dataInicial,setDataInicial]=useState(formatarData(hoje));const[dataFinal,setDataFinal]=useState(formatarData(new Date(hoje.setDate(hoje.getDate()+7))));const buscarUnidade=async()=>{try{const buscarUnidade=await fetch(`${API_URL}/api/buscarUnidade`);const dados=await buscarUnidade.json();setUnidades(dados);}catch{}};const buscarAcomodacoesOcupadas=async()=>{try{const resposta=await fetch(`${API_URL}/api/buscarAcomodacoesOcupadas`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({dataInicial,dataFinal})});const data=await resposta.json();setAcomodacaoOcupada((data===null||data===void 0?void 0:data.acomodacoesOcupadas)||[]);setAcomodacaoReservada((data===null||data===void 0?void 0:data.acomodacoesReservadas)||[]);setTotalOcupadas(data===null||data===void 0?void 0:data.totalOcupadas);setTotalReservadas(data===null||data===void 0?void 0:data.totalReservadas);}catch(erro){console.error('Erro ao buscar acomodações ocupadas:',erro);}};const buscarAcomodacoesDisponiveis=async()=>{try{const resposta=await fetch(`${API_URL}/api/buscarAcomodacoesDisponiveis`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({dataInicial,dataFinal})});const data=await resposta.json();setAcomodacaoDisponiveis((data===null||data===void 0?void 0:data.acomodacoesDisponiveis)||[]);setTotalAcomodacoes(data===null||data===void 0?void 0:data.totalAcomodacoes);setTotalDisponiveis(data===null||data===void 0?void 0:data.totalDisponiveis);}catch(erro){console.error('Erro ao buscar acomodações disponíveis:',erro);}};const filtrarAcomodacoes=lista=>{return lista.filter(acomodacao=>{var _acomodacao$id,_acomodacao$numAcomod,_acomodacao$idUnidade;const busca=termoBusca.toLowerCase();const idMatch=(_acomodacao$id=acomodacao.id)===null||_acomodacao$id===void 0?void 0:_acomodacao$id.toString().includes(busca);const numeroMatch=(_acomodacao$numAcomod=acomodacao.numAcomodacao)===null||_acomodacao$numAcomod===void 0?void 0:_acomodacao$numAcomod.toString().includes(busca);const unidadeMatch=unidadeSelecionada===\"\"||((_acomodacao$idUnidade=acomodacao.idUnidade)===null||_acomodacao$idUnidade===void 0?void 0:_acomodacao$idUnidade.toString())===unidadeSelecionada;return(idMatch||numeroMatch)&&unidadeMatch;});};const disponiveisFiltradas=filtrarAcomodacoes(acomodacoesDisponiveis);const reservadasFiltradas=filtrarAcomodacoes(acomodacoesReservadas);const ocupadasFiltradas=filtrarAcomodacoes(acomodacaoOcupada);useEffect(()=>{buscarUnidade();},[]);useEffect(()=>{buscarAcomodacoesDisponiveis();buscarAcomodacoesOcupadas();},[dataInicial,dataFinal]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"barra-de-pesquisa\",children:/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"search\",placeholder:\"Pesquisa pelo ID da acomoda\\xE7\\xE3o, n\\xFAmero da acomoda\\xE7\\xE3o\",value:termoBusca,onChange:e=>setTermoBusca(e.target.value)})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Data Inicial\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:dataInicial,onChange:e=>setDataInicial(e.target.value)}),/*#__PURE__*/_jsx(\"label\",{children:\"Data Final\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:dataFinal,onChange:e=>setDataFinal(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Unidade\"}),/*#__PURE__*/_jsxs(\"select\",{value:unidadeSelecionada,onChange:e=>setUnidadeSelecionada(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:'',children:\"Selecione uma unidade\"}),unidades.map(unidade=>/*#__PURE__*/_jsx(\"option\",{value:unidade.id,children:unidade.nomeUnidade},unidade.id))]})]})]})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Quantidade Total de Acomoda\\xE7\\xF5es: \",disponiveisFiltradas.length+reservadasFiltradas.length+ocupadasFiltradas.length]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Quantidade de Acomoda\\xE7\\xF5es dispon\\xEDveis: \",disponiveisFiltradas.length]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Quantidade de acomoda\\xE7\\xF5es ocupadas: \",ocupadasFiltradas.length]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Quantidade de acomoda\\xE7\\xF5es reservadas: \",reservadasFiltradas.length]})]}),/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"button\",value:\"Dispon\\xEDveis\",onClick:()=>setSessaso(1)}),/*#__PURE__*/_jsx(\"input\",{type:\"button\",value:\"Reservadas\",onClick:()=>setSessaso(2)}),/*#__PURE__*/_jsx(\"input\",{type:\"button\",value:\"Ocupadas\",onClick:()=>setSessaso(3)}),sessao===1&&/*#__PURE__*/_jsx(\"div\",{children:filtrarAcomodacoes(acomodacoesDisponiveis).map(acomodacao=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Acomoda\\xE7\\xE3o: \",acomodacao.id]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Unidade: \",acomodacao.nomeUnidade]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Tipo acomoda\\xE7\\xE3o: \",acomodacao.nomeAcomodacao]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"N\\xFAmero do Quarto: \",acomodacao.numAcomodacao]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"N\\xFAmero do andar: \",acomodacao.num_andar]})]})]},acomodacao.id))}),sessao===2&&/*#__PURE__*/_jsx(\"div\",{children:filtrarAcomodacoes(acomodacoesReservadas).map(acomodacao=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Acomoda\\xE7\\xE3o: \",acomodacao.id]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Unidade: \",acomodacao.nomeUnidade]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Tipo acomoda\\xE7\\xE3o: \",acomodacao.nomeAcomodacao]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"N\\xFAmero do Quarto: \",acomodacao.numAcomodacao]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"N\\xFAmero do andar: \",acomodacao.num_andar]})]})]},acomodacao.id))}),sessao===3&&/*#__PURE__*/_jsx(\"div\",{children:filtrarAcomodacoes(acomodacaoOcupada).map(acomodacao=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Acomoda\\xE7\\xE3o: \",acomodacao.id]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Unidade: \",acomodacao.nomeUnidade]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Tipo acomoda\\xE7\\xE3o: \",acomodacao.nomeAcomodacao]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"N\\xFAmero do Quarto: \",acomodacao.numAcomodacao]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"N\\xFAmero do andar: \",acomodacao.num_andar]})]})]},acomodacao.id))})]})]});}export default Ocupacao;","map":{"version":3,"names":["useEffect","useState","API_URL","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Ocupacao","sessao","setSessaso","unidades","setUnidades","acomodacaoOcupada","setAcomodacaoOcupada","acomodacoesDisponiveis","setAcomodacaoDisponiveis","acomodacoesReservadas","setAcomodacaoReservada","busca","setBusca","unidadeSelecionada","setUnidadeSelecionada","hoje","Date","formatarData","data","toISOString","split","dataInicial","setDataInicial","dataFinal","setDataFinal","setDate","getDate","buscarUnidade","fetch","dados","json","buscarAcomodacoesOcupadas","resposta","method","headers","body","JSON","stringify","acomodacoesOcupadas","setTotalOcupadas","totalOcupadas","setTotalReservadas","totalReservadas","erro","console","error","buscarAcomodacoesDisponiveis","setTotalAcomodacoes","totalAcomodacoes","setTotalDisponiveis","totalDisponiveis","filtrarAcomodacoes","lista","filter","acomodacao","_acomodacao$id","_acomodacao$numAcomod","_acomodacao$idUnidade","termoBusca","toLowerCase","idMatch","id","toString","includes","numeroMatch","numAcomodacao","unidadeMatch","idUnidade","disponiveisFiltradas","reservadasFiltradas","ocupadasFiltradas","children","className","type","placeholder","value","onChange","e","setTermoBusca","target","map","unidade","nomeUnidade","length","onClick","nomeAcomodacao","num_andar"],"sources":["C:/Users/andre/hotel_green/frontend/src/pages/ocupacao/ocupacao.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { API_URL } from \"../../url\"\r\n\r\nfunction Ocupacao() {\r\n    const [sessao, setSessaso] = useState(1)\r\n    const [unidades, setUnidades] = useState([])\r\n    const [acomodacaoOcupada, setAcomodacaoOcupada] = useState([])\r\n    const [acomodacoesDisponiveis, setAcomodacaoDisponiveis] = useState([])\r\n    const [acomodacoesReservadas, setAcomodacaoReservada] = useState([])\r\n\r\n    const [busca, setBusca] = useState(\"\")\r\n    const [unidadeSelecionada, setUnidadeSelecionada] = useState(\"\")\r\n\r\n\r\n    const hoje = new Date()\r\n    const formatarData = (data) => data.toISOString().split(\"T\")[0]\r\n    const [dataInicial, setDataInicial] = useState(formatarData(hoje))\r\n    const [dataFinal, setDataFinal] = useState(formatarData(new Date(hoje.setDate(hoje.getDate() + 7))))\r\n\r\n    const buscarUnidade = async () => {\r\n        try {\r\n            const buscarUnidade = await fetch(`${API_URL}/api/buscarUnidade`)\r\n            const dados = await buscarUnidade.json()\r\n            setUnidades(dados)\r\n        } catch { }\r\n    }\r\n\r\n    const buscarAcomodacoesOcupadas = async () => {\r\n        try {\r\n            const resposta = await fetch(`${API_URL}/api/buscarAcomodacoesOcupadas`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ dataInicial, dataFinal })\r\n            })\r\n            const data = await resposta.json()\r\n            setAcomodacaoOcupada(data?.acomodacoesOcupadas || [])\r\n            setAcomodacaoReservada(data?.acomodacoesReservadas || [])\r\n            setTotalOcupadas(data?.totalOcupadas)\r\n            setTotalReservadas(data?.totalReservadas)\r\n        } catch (erro) {\r\n            console.error('Erro ao buscar acomodações ocupadas:', erro)\r\n        }\r\n    }\r\n\r\n    const buscarAcomodacoesDisponiveis = async () => {\r\n        try {\r\n            const resposta = await fetch(`${API_URL}/api/buscarAcomodacoesDisponiveis`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ dataInicial, dataFinal })\r\n            })\r\n            const data = await resposta.json()\r\n            setAcomodacaoDisponiveis(data?.acomodacoesDisponiveis || [])\r\n            setTotalAcomodacoes(data?.totalAcomodacoes)\r\n            setTotalDisponiveis(data?.totalDisponiveis)\r\n        } catch (erro) {\r\n            console.error('Erro ao buscar acomodações disponíveis:', erro)\r\n        }\r\n    }\r\n\r\n    const filtrarAcomodacoes = (lista) => {\r\n        return lista.filter(acomodacao => {\r\n            const busca = termoBusca.toLowerCase()\r\n            const idMatch = acomodacao.id?.toString().includes(busca)\r\n            const numeroMatch = acomodacao.numAcomodacao?.toString().includes(busca)\r\n            const unidadeMatch = unidadeSelecionada === \"\" || acomodacao.idUnidade?.toString() === unidadeSelecionada\r\n\r\n            return (idMatch || numeroMatch) && unidadeMatch\r\n        })\r\n    }   \r\n\r\n    const disponiveisFiltradas = filtrarAcomodacoes(acomodacoesDisponiveis)\r\n    const reservadasFiltradas = filtrarAcomodacoes(acomodacoesReservadas)\r\n    const ocupadasFiltradas = filtrarAcomodacoes(acomodacaoOcupada)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        buscarUnidade()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        buscarAcomodacoesDisponiveis()\r\n        buscarAcomodacoesOcupadas()\r\n    }, [dataInicial, dataFinal])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"barra-de-pesquisa\">\r\n                <form>\r\n                    <div>\r\n                        <input type=\"search\" placeholder=\"Pesquisa pelo ID da acomodação, número da acomodação\"    value={termoBusca} onChange={(e) => setTermoBusca(e.target.value)}/>\r\n                    </div>\r\n                    <div>\r\n                        <label>Data Inicial</label>\r\n                        <input\r\n                            type=\"date\"\r\n                            value={dataInicial}\r\n                            onChange={(e) => setDataInicial(e.target.value)}\r\n                        />\r\n                        <label>Data Final</label>\r\n                        <input\r\n                            type=\"date\"\r\n                            value={dataFinal}\r\n                            onChange={(e) => setDataFinal(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label>Unidade</label>\r\n                        <select\r\n                            value={unidadeSelecionada}\r\n                            onChange={(e) => setUnidadeSelecionada(e.target.value)}\r\n                        >\r\n                            <option value={''}>Selecione uma unidade</option>\r\n                            {unidades.map(unidade => (\r\n                                <option key={unidade.id} value={unidade.id}>{unidade.nomeUnidade}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div>\r\n                <p>Quantidade Total de Acomodações: {disponiveisFiltradas.length + reservadasFiltradas.length + ocupadasFiltradas.length}</p>\r\n                <p>Quantidade de Acomodações disponíveis: {disponiveisFiltradas.length}</p>\r\n                <p>Quantidade de acomodações ocupadas: {ocupadasFiltradas.length}</p>\r\n                <p>Quantidade de acomodações reservadas: {reservadasFiltradas.length}</p>\r\n            </div>\r\n            <main>\r\n                <input type=\"button\" value=\"Disponíveis\" onClick={() => setSessaso(1)} />\r\n                <input type=\"button\" value=\"Reservadas\" onClick={() => setSessaso(2)} />\r\n                <input type=\"button\" value=\"Ocupadas\" onClick={() => setSessaso(3)} />\r\n\r\n                {sessao === 1 && (\r\n                    <div>\r\n                        {filtrarAcomodacoes(acomodacoesDisponiveis).map(acomodacao => (\r\n                            <div key={acomodacao.id}>\r\n                                <h1>Acomodação: {acomodacao.id}</h1>\r\n                                <div>\r\n                                    <p>Unidade: {acomodacao.nomeUnidade}</p>\r\n                                    <p>Tipo acomodação: {acomodacao.nomeAcomodacao}</p>\r\n                                    <p>Número do Quarto: {acomodacao.numAcomodacao}</p>\r\n                                    <p>Número do andar: {acomodacao.num_andar}</p>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n\r\n                {sessao === 2 && (\r\n                    <div>\r\n                        {filtrarAcomodacoes(acomodacoesReservadas).map(acomodacao => (\r\n                            <div key={acomodacao.id}>\r\n                                <h1>Acomodação: {acomodacao.id}</h1>\r\n                                <div>\r\n                                    <p>Unidade: {acomodacao.nomeUnidade}</p>\r\n                                    <p>Tipo acomodação: {acomodacao.nomeAcomodacao}</p>\r\n                                    <p>Número do Quarto: {acomodacao.numAcomodacao}</p>\r\n                                    <p>Número do andar: {acomodacao.num_andar}</p>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n\r\n                {sessao === 3 && (\r\n                    <div>\r\n                        {filtrarAcomodacoes(acomodacaoOcupada).map(acomodacao => (\r\n                            <div key={acomodacao.id}>\r\n                                <h1>Acomodação: {acomodacao.id}</h1>\r\n                                <div>\r\n                                    <p>Unidade: {acomodacao.nomeUnidade}</p>\r\n                                    <p>Tipo acomodação: {acomodacao.nomeAcomodacao}</p>\r\n                                    <p>Número do Quarto: {acomodacao.numAcomodacao}</p>\r\n                                    <p>Número do andar: {acomodacao.num_andar}</p>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Ocupacao\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}