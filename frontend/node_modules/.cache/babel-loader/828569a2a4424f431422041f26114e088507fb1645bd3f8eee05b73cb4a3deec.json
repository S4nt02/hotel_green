{"ast":null,"code":"import React from'react';import{Link}from'react-router-dom';//import para usar rotas\nimport{useEffect,useState}from'react';//import para recuperar dados do back\nimport{API_URL}from'../../url';import HeaderComponente from'../../componetes/header/headerComponente';import{User,Phone,MapPin,Calendar,Flag,Home,Mail,IdCard,FileText,Lock,MapPinHouse,Building2,Landmark,Building,Map,UserCog2}from'lucide-react';import\"./cadFuncionario.css\";import{useForm}from'react-hook-form';import{z}from'zod';import{zodResolver}from'@hookform/resolvers/zod';import{useNavigate}from'react-router-dom';import{KeyRound}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function CadFuncionario(_ref){let{dadosFuncionarioParaEditar}=_ref;const navigate=useNavigate();const[cep,setCep]=useState(\"\");const[dadosEndereco,setDadosEndereco]=useState(\"\");const[erroCep,setErroCep]=useState(\"\");const[cpf_rg,setCPF_RG]=useState(\"\");const[cargos,setCargo]=useState([]);const[erroCargo,setErroCargo]=useState(false);const[dadosFuncionario,setDadosFuncionario]=useState(()=>dadosFuncionarioParaEditar||{});const[editar,setEditar]=useState(false);const[cargoFuncionario,setCargoFuncionario]=useState(2);const[autorizacaoFuncionario,setAutorizacaoFuncionario]=useState('');const buscarCargo=async()=>{try{const resposta=await fetch(`${API_URL}/cargos`);const data=await resposta.json();if(!resposta.ok){setCargo([]);setErroCargo(true);}setCargo(data);}catch{setCargo([]);setErroCargo(true);}};///////////////////API CORREIOS/////////////////////\nconst buscarCep=async buscarCep=>{console.log(\"chamando função\");if(buscarCep.length>7){console.log(\"CEP digitado:\",buscarCep);try{const resposta=await fetch(`${API_URL}/api/cep/${buscarCep}`);const data=await resposta.json();if(!resposta.ok||data.erro){setErroCep(\"CEP não encontrado\");setDadosEndereco({});return;}setDadosEndereco(data);setErroCep(\"\");// Se quiser ver os dados, use um efeito ou log direto aqui\nconsole.log(\"Dados recebidos:\",data);}finally{}}};/////////////////////////////////////////////////////////\n/////////////validação formulário////////////////\nconst validar=z.object({nome:z.string().min(10,{message:\"Nome completo é obrigatório\"}),dtNascimento:z.string().min(1,{message:\"A data de nascimento é obrigatória\"})// Garante que o campo não está vazio\n.transform(val=>new Date(val))// Transforma em Date\n.refine(date=>date<=new Date(),{message:\"A data de nascimento não pode ser no futuro\"}),nomeMae:z.string().min(10,{message:\"Nome da Mãe é obrigatório\"}),nomePai:z.string().optional(),email:z.string().email({message:\"Formato de email inválido\"}).refine(email=>email.trim().length>0,{message:\"Email é obrigatório\"}),senha:z.string().min(8,\"A senha deve conter no mínimo 8 digitos\").refine(s=>s.trim().length>0,{message:\"Por favor, crie uma senha\"}),confirmarSenha:z.string().refine(s=>s.trim().length>0,{message:\"Por favor confirme sua senha\"}),documento:z.string().refine(val=>val.trim().length>0,{message:\"CPF é obrigatório\"}).refine(val=>validarCPF_RG(val),{message:\"CPF inválido\"}),cargo:z.coerce.number().min(1,\"Selecione um cargo válido\"),autorizacao:z.coerce.number().min(1,\"Selecione um cargo válido\"),telefone:z.string().refine(telefone=>telefone.trim().length>0,{message:\"O número de telefone é obrigatório\"}),cep:z.string().optional(),logradouro:z.string().refine(logradouro=>logradouro.trim().length>0,{message:\"Logradouro é obrigatório\"}),numero:z.string().refine(numero=>numero.trim().length>0,{message:\"Número é obrigatório\"}),complemento:z.string().optional(),bairro:z.string().refine(bairro=>bairro.trim().length>0,{message:\"Bairro é obrigatório\"}),cidade:z.string().refine(cidade=>cidade.trim().length>0,{message:\"Cidade é obrigatório\"}),estado:z.string().refine(estado=>estado.trim().length>0,{message:\"Estado é obrigatório\"}),pais:z.string().refine(pais=>pais.trim().length>0,{message:\"País é obrigatório\"})}).refine(data=>data.senha===data.confirmarSenha,{path:['confirmarSenha'],message:\"As senhas não coincidem\"}).refine(data=>{return data.cep&&data.cep.trim().length>0;},{path:['cep'],message:\"CEP é obrigatório\"});///////////////validação de CPF//////////////////\nconst validarCPF_RG=cpf_rg=>{console.log(cpf_rg);if(!cpf_rg)return false;// Se cpf_rg for undefined ou null, retorna false imediatamente.\n// Se o documento for CPF\nelse{cpf_rg=cpf_rg.replace(/[^\\d]/g,\"\");// Remove caracteres não numéricos\n// Verifica se o CPF tem 11 dígitos e não é uma sequência repetitiva\nif(cpf_rg.length!==11||/^(\\d)\\1{10}$/.test(cpf_rg))return false;// Calcula os dígitos verificadores do CPF\nlet sum=0;for(let i=0;i<9;i++)sum+=parseInt(cpf_rg[i])*(10-i);let firstVerifier=11-sum%11;firstVerifier=firstVerifier===10||firstVerifier===11?0:firstVerifier;sum=0;for(let i=0;i<10;i++)sum+=parseInt(cpf_rg[i])*(11-i);let secondVerifier=11-sum%11;secondVerifier=secondVerifier===10||secondVerifier===11?0:secondVerifier;// Compara os dígitos verificadores calculados com os do CPF\nreturn cpf_rg[9]===firstVerifier.toString()&&cpf_rg[10]===secondVerifier.toString();}// Lógica para validar RG (ainda não implementada)\nreturn true;// Se não for nem CPF nem RG, retorna true\n};//////////////////////////////////////////////////////////////\n////////////////////////ENIO FORMULARIO///////////////////////\nconst{register,handleSubmit,setValue,reset,formState:{errors}}=useForm({resolver:zodResolver(validar)});const enviarFormulario=async dados=>{console.log(\"chamando a função\");console.log(`dados ${JSON.stringify(dados)}`);if(editar){try{const cadastrar=await fetch(`${API_URL}/api/editarFuncionario`,{method:'POST',headers:{'Content-Type':\"application/json\"},body:JSON.stringify(dados)});if(!cadastrar.ok){//definir erros do alerta\n}}catch(erro){//definir erros do alerta\n}}else{try{const cadastrar=await fetch(`${API_URL}/api/cadFuncionario`,{method:'POST',headers:{'Content-Type':\"application/json\"},body:JSON.stringify(dados)});if(!cadastrar.ok){//definir erros do alerta\n}}catch(erro){//definir erros do alerta\n}}};const onError=errors=>{console.log(\"❌ Erros de validação:\");console.log(errors);};const formatDate=date=>{const data=new Date(date);return data.toISOString().split('T')[0];// Retorna apenas a parte da data (YYYY-MM-DD)\n};useEffect(()=>{buscarCargo();if(dadosFuncionarioParaEditar){setDadosFuncionario(dadosFuncionarioParaEditar);setEditar(true);setAutorizacaoFuncionario(dadosFuncionario.autorizacao);setCargoFuncionario(dadosFuncionario.cargo);reset({nome:dadosFuncionario.nome||\"\",dtNascimento:formatDate(dadosFuncionario.dtNascimento)||\"\",nomeMae:dadosFuncionario.nomeMae||\"\",nomePai:dadosFuncionario.nomePai||\"\",email:dadosFuncionario.email||\"\",senha:dadosFuncionario.senha||\"\",confirmarSenha:dadosFuncionario.senha||\"\",documento:dadosFuncionario.documento||\"\",cargo:dadosFuncionario.cargo||\"\",autorizacao:dadosFuncionario.autorizacao||\"\",telefone:dadosFuncionario.telefone||\"\",cep:dadosFuncionario.cep||\"\",logradouro:dadosFuncionario.logradouro||\"\",numero:dadosFuncionario.numero||\"\",complemento:dadosFuncionario.complemento||\"\",bairro:dadosFuncionario.bairro||\"\",cidade:dadosFuncionario.cidade||\"\",estado:dadosFuncionario.estado||\"\",pais:dadosFuncionario.pais||\"\"});}},[dadosFuncionarioParaEditar]);/////////////////////////////////////////////////////////////////\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"form_content\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(enviarFormulario,onError),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"informacoePessoais\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Informa\\xE7\\xF5es Pessoais\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"alinhar_content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"edit_label_input\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"alinhar_itens\",children:[/*#__PURE__*/_jsx(User,{size:18}),\" Nome Completo\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"cadastro_input\",id:\"nomeCompleto\",placeholder:\"Digite seu nome completo\",...register(\"nome\")}),errors.nome&&/*#__PURE__*/_jsx(\"p\",{children:errors.nome.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit_label_input\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"alinhar_itens\",children:[/*#__PURE__*/_jsx(Calendar,{size:18}),\"Data de Nascimento\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",className:\"cadastro_input\",id:\"dtNascimento\",...register('dtNascimento'),inputMode:\"numeric\",pattern:\"[0-9]*\"}),errors.dtNascimento&&/*#__PURE__*/_jsx(\"p\",{children:errors.dtNascimento.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit_label_input\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"alinhar_itens\",children:[/*#__PURE__*/_jsx(User,{size:18}),\" Nome da M\\xE3e\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"cadastro_input\",id:\"nomeMae\",placeholder:\"Digite o nome da m\\xE3e completo\",...register(\"nomeMae\")}),errors.nomeMae&&/*#__PURE__*/_jsx(\"p\",{children:errors.nomeMae.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit_label_input\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"alinhar_itens\",children:[/*#__PURE__*/_jsx(User,{size:18}),\" Nome do Pai\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"cadastro_input\",id:\"nomePai\",placeholder:\"Digite o nome do pai completo\",...register(\"nomePai\")})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit_label_input\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"alinhar_itens\",children:[/*#__PURE__*/_jsx(Mail,{size:18}),\" Email\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"mail\",className:\"cadastro_input\",placeholder:\"Digite seu email\",...register(\"email\")}),errors.email&&/*#__PURE__*/_jsx(\"p\",{children:errors.email.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit_label_input\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"alinhar_itens\",children:[/*#__PURE__*/_jsx(Lock,{size:18}),\" Senha\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"cadastro_input\",placeholder:\"Digite sua senha\",...register(\"senha\")}),errors.senha&&/*#__PURE__*/_jsx(\"p\",{children:errors.senha.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit_label_input\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"alinhar_itens\",children:[/*#__PURE__*/_jsx(IdCard,{size:18}),\" N\\xFAmero do CPF\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"cadastro_input\",placeholder:`Digite seu número de CPF`,...register(\"documento\"),onChange:e=>{const value=e.target.value;setCPF_RG(value);// Atualiza o estado com o valor\nvalidarCPF_RG(value);// Passa o valor diretamente para a validação\n},inputMode:\"numeric\",pattern:\"[0-9]*\"}),errors.cpf_rg&&/*#__PURE__*/_jsx(\"p\",{children:errors.cpf_rg.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit_label_input\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"alinhar_itens\",children:[/*#__PURE__*/_jsx(Lock,{size:18}),\" Confirmar Senha\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"cadastro_input\",placeholder:\"Confirme sua senha\",...register(\"confirmarSenha\")}),errors.confirmarSenha&&/*#__PURE__*/_jsx(\"p\",{children:errors.confirmarSenha.message})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"nacionalidade_documento\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Cargo e Autoriza\\xE7\\xE3o\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"alinhar_content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"edit_label_input\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"alinhar_itens\",children:[/*#__PURE__*/_jsx(UserCog2,{size:18}),\"Cargo\"]}),/*#__PURE__*/_jsxs(\"select\",{id:\"cargo\",...register('cargo',{valueAsNumber:true}),value:dadosFuncionario.cargo||\"\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",selected:true,children:\"Selecione um cargo\"}),cargos.map(cargos=>/*#__PURE__*/_jsx(\"option\",{value:Number(cargos.id),selected:true,children:cargos.nome},cargos.id))]}),errors.cargo&&/*#__PURE__*/_jsx(\"p\",{children:errors.cargo.message}),erroCargo&&/*#__PURE__*/_jsx(\"p\",{children:\"Erro ao carregar os cargos\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit_label_input\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"alinhar_itens\",children:[/*#__PURE__*/_jsx(KeyRound,{size:18}),\"Autoriza\\xE7\\xE3o\"]}),/*#__PURE__*/_jsxs(\"select\",{id:\"autorizacao\",placeholder:\"Selecione o n\\xEDvel de autoriza\\xE7\\xE3o\",...register('autorizacao'),children:[/*#__PURE__*/_jsx(\"option\",{value:\"2\",children:\"Autoriza\\xE7\\xE3o Padr\\xE3o \"}),/*#__PURE__*/_jsx(\"option\",{value:\"1\",children:\"Controle Total\"})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"contato_endereco\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Endere\\xE7o e contato\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"alinhar_contato_endereco\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"edit_label_input\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"alinhar_itens\",children:[/*#__PURE__*/_jsx(Phone,{size:18}),\"N\\xFAmero de Telefone\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"cadastro_input\",placeholder:\"N\\xFAmero de telefone com DDD\",...register(\"telefone\")}),errors.telefone&&/*#__PURE__*/_jsx(\"p\",{children:errors.telefone.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit_label_input\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"alinhar_itens\",children:[/*#__PURE__*/_jsx(MapPin,{size:18}),\"CEP\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"cadastro_input\",placeholder:\"Digite seu CEP\",...register(\"cep\"),onBlur:e=>{const novoCep=e.target.value;setCep(novoCep);setValue(\"cep\",novoCep);// sincroniza com react-hook-form\nbuscarCep(novoCep);},inputMode:\"numeric\",pattern:\"[0-9]*\",maxLength:8}),errors.cep&&/*#__PURE__*/_jsx(\"p\",{children:errors.cep.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit_label_input\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"alinhar_itens\",children:[/*#__PURE__*/_jsx(Home,{size:18}),\"Logradouro\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"cadastro_input\",placeholder:\"Nome da rua\",value:dadosEndereco.logradouro,...register(\"logradouro\"),onChange:()=>{}}),errors.logradouro&&/*#__PURE__*/_jsx(\"p\",{children:errors.logradouro.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit_label_input\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"alinhar_itens\",children:[/*#__PURE__*/_jsx(MapPinHouse,{size:18}),\"N\\xFAmero\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"cadastro_input\",placeholder:\"N\\xFAmero\",...register(\"numero\"),inputMode:\"numeric\",pattern:\"[0-9]*\"}),errors.numero&&/*#__PURE__*/_jsx(\"p\",{children:errors.numero.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit_label_input\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"alinhar_itens\",children:[/*#__PURE__*/_jsx(Building,{size:18}),\"Complemento\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"cadastro_input\",placeholder:\"Apartamento, bloco, etc\",...register(\"complemento\")})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit_label_input\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"alinhar_itens\",children:[/*#__PURE__*/_jsx(Landmark,{size:18}),\" Bairro\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"cadastro_input\",placeholder:\"Bairro\",value:dadosEndereco.bairro,...register(\"bairro\"),onChange:()=>{}}),errors.bairro&&/*#__PURE__*/_jsx(\"p\",{children:errors.bairro.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit_label_input\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"alinhar_itens\",children:[/*#__PURE__*/_jsx(Building2,{size:18}),\"Cidade\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"cadastro_input\",placeholder:\"Cidade\",value:dadosEndereco.localidade,...register(\"cidade\"),onChange:()=>{}}),errors.cidade&&/*#__PURE__*/_jsx(\"p\",{children:errors.cidade.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit_label_input\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"alinhar_itens\",children:[/*#__PURE__*/_jsx(MapPin,{size:18}),\"Estado\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"cadastro_input\",placeholder:\"Estado\",value:dadosEndereco.estado,...register(\"estado\"),onChange:()=>{}}),errors.estado&&/*#__PURE__*/_jsx(\"p\",{children:errors.estado.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit_label_input\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"alinhar_itens\",children:[/*#__PURE__*/_jsx(Flag,{size:18}),\"Pa\\xEDs\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"cadastro_input\",placeholder:\"Pa\\xEDs\",...register(\"pais\")}),errors.pais&&/*#__PURE__*/_jsx(\"p\",{children:errors.pais.message})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[editar==false&&/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"cadastro_button\",children:\"Finalizar Cadastro\"}),editar==true&&/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"cadastro_button\",children:\"Salvar Dados\"})]})]})})});}export default CadFuncionario;","map":{"version":3,"names":["React","Link","useEffect","useState","API_URL","HeaderComponente","User","Phone","MapPin","Calendar","Flag","Home","Mail","IdCard","FileText","Lock","MapPinHouse","Building2","Landmark","Building","Map","UserCog2","useForm","z","zodResolver","useNavigate","KeyRound","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CadFuncionario","_ref","dadosFuncionarioParaEditar","navigate","cep","setCep","dadosEndereco","setDadosEndereco","erroCep","setErroCep","cpf_rg","setCPF_RG","cargos","setCargo","erroCargo","setErroCargo","dadosFuncionario","setDadosFuncionario","editar","setEditar","cargoFuncionario","setCargoFuncionario","autorizacaoFuncionario","setAutorizacaoFuncionario","buscarCargo","resposta","fetch","data","json","ok","buscarCep","console","log","length","erro","validar","object","nome","string","min","message","dtNascimento","transform","val","Date","refine","date","nomeMae","nomePai","optional","email","trim","senha","s","confirmarSenha","documento","validarCPF_RG","cargo","coerce","number","autorizacao","telefone","logradouro","numero","complemento","bairro","cidade","estado","pais","path","replace","test","sum","i","parseInt","firstVerifier","secondVerifier","toString","register","handleSubmit","setValue","reset","formState","errors","resolver","enviarFormulario","dados","JSON","stringify","cadastrar","method","headers","body","onError","formatDate","toISOString","split","children","className","onSubmit","size","type","id","placeholder","inputMode","pattern","onChange","e","value","target","valueAsNumber","selected","map","Number","onBlur","novoCep","maxLength","localidade"],"sources":["C:/Users/andre/hotel_green/frontend/src/componetes/cad_funcionario/cadFuncionario.js"],"sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'; //import para usar rotas\r\nimport { useEffect, useState } from 'react' //import para recuperar dados do back\r\nimport { API_URL } from '../../url';\r\nimport HeaderComponente from '../../componetes/header/headerComponente';\r\nimport { User, Phone, MapPin, Calendar, Flag, Home, Mail, IdCard, FileText, Lock, MapPinHouse, Building2, Landmark, Building, Map, UserCog2 } from 'lucide-react';\r\nimport \"./cadFuncionario.css\"\r\nimport { useForm} from 'react-hook-form';\r\nimport { z } from 'zod';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { KeyRound } from 'lucide-react';\r\n\r\n\r\n\r\nfunction CadFuncionario ({dadosFuncionarioParaEditar}){\r\n    const navigate =  useNavigate()\r\n\r\n    const [cep, setCep] = useState(\"\")\r\n    const [dadosEndereco, setDadosEndereco] = useState(\"\")\r\n    const [erroCep, setErroCep] = useState(\"\")\r\n    const [cpf_rg, setCPF_RG] = useState(\"\")\r\n    const [cargos, setCargo] = useState([])\r\n    const [erroCargo, setErroCargo] = useState(false)\r\n    const [dadosFuncionario, setDadosFuncionario] = useState(() => dadosFuncionarioParaEditar || {})\r\n    const [editar, setEditar] = useState(false)\r\n    const [cargoFuncionario, setCargoFuncionario] = useState(2)\r\n    const [autorizacaoFuncionario, setAutorizacaoFuncionario] = useState('')\r\n\r\n    \r\n    const buscarCargo = async() =>{\r\n      try{\r\n        const resposta = await fetch(`${API_URL}/cargos`);\r\n        const data = await resposta.json()\r\n\r\n        if(!resposta.ok){\r\n          setCargo([])\r\n          setErroCargo(true)\r\n        }\r\n\r\n        setCargo(data)\r\n      }\r\n      catch{\r\n        setCargo([])\r\n        setErroCargo(true)\r\n      }\r\n    }\r\n\r\n\r\n    ///////////////////API CORREIOS/////////////////////\r\n\r\n    const buscarCep = async (buscarCep) => {\r\n      console.log(\"chamando função\");\r\n      if(buscarCep.length > 7){\r\n        console.log(\"CEP digitado:\", buscarCep);\r\n      \r\n        try {\r\n          const resposta = await fetch(`${API_URL}/api/cep/${buscarCep}`);\r\n          const data = await resposta.json();\r\n      \r\n          if (!resposta.ok || data.erro) {\r\n            setErroCep(\"CEP não encontrado\");\r\n            setDadosEndereco({});\r\n            return;\r\n          }\r\n      \r\n          setDadosEndereco(data);\r\n          setErroCep(\"\");\r\n      \r\n          // Se quiser ver os dados, use um efeito ou log direto aqui\r\n          console.log(\"Dados recebidos:\", data);\r\n        }\r\n        finally{\r\n            \r\n        }\r\n      }\r\n        \r\n    };\r\n    /////////////////////////////////////////////////////////\r\n\r\n\r\n    /////////////validação formulário////////////////\r\n\r\n\r\n    const validar = z.object({\r\n        nome: z.string().min(10, { message: \"Nome completo é obrigatório\" }),\r\n        dtNascimento: z\r\n          .string()\r\n          .min(1, { message: \"A data de nascimento é obrigatória\" }) // Garante que o campo não está vazio\r\n          .transform((val) => new Date(val)) // Transforma em Date\r\n          .refine((date) => date <= new Date(), {\r\n            message: \"A data de nascimento não pode ser no futuro\",\r\n          }),\r\n      \r\n        nomeMae: z.string().min(10, { message: \"Nome da Mãe é obrigatório\" }),\r\n        nomePai : z.string().optional(),\r\n        email: z.string()\r\n          .email({ message: \"Formato de email inválido\" })\r\n          .refine(email => email.trim().length > 0, {\r\n            message: \"Email é obrigatório\"\r\n          }),\r\n        senha: z.string()\r\n          .min(8, \"A senha deve conter no mínimo 8 digitos\")\r\n          .refine(s => s.trim().length > 0, {\r\n            message: \"Por favor, crie uma senha\"\r\n          }),\r\n        confirmarSenha: z.string()\r\n          .refine(s => s.trim().length > 0, {\r\n            message: \"Por favor confirme sua senha\"\r\n          }),\r\n        documento: z\r\n          .string()\r\n          .refine((val) => val.trim().length > 0, {\r\n            message: \"CPF é obrigatório\"\r\n          })\r\n          .refine((val) => validarCPF_RG(val), {\r\n            message: \"CPF inválido\"\r\n          }),\r\n        cargo: z.coerce.number().min(1, \"Selecione um cargo válido\"),\r\n        autorizacao: z.coerce.number().min(1, \"Selecione um cargo válido\"),\r\n\r\n        telefone: z.string()\r\n          .refine(telefone => telefone.trim().length > 0, {\r\n            message: \"O número de telefone é obrigatório\"\r\n          }),\r\n        cep: z.string()\r\n          .optional(),\r\n        logradouro: z.string()\r\n          .refine(logradouro => logradouro.trim().length > 0, {\r\n            message: \"Logradouro é obrigatório\"\r\n          }),\r\n        numero: z.string()\r\n          .refine(numero => numero.trim().length > 0, {\r\n            message: \"Número é obrigatório\"\r\n          }),\r\n        complemento : z.string().optional(),\r\n        bairro: z.string()\r\n          .refine(bairro => bairro.trim().length > 0, {\r\n            message: \"Bairro é obrigatório\"\r\n          }),\r\n        cidade: z.string()\r\n          .refine(cidade => cidade.trim().length > 0, {\r\n            message: \"Cidade é obrigatório\"\r\n          }),\r\n        estado: z.string()\r\n          .refine(estado => estado.trim().length > 0, {\r\n            message: \"Estado é obrigatório\"\r\n          }),\r\n        pais: z.string()\r\n          .refine(pais => pais.trim().length > 0, {\r\n            message: \"País é obrigatório\"\r\n          }),\r\n        \r\n      })\r\n\r\n      .refine(data => data.senha === data.confirmarSenha, {\r\n        path: ['confirmarSenha'],\r\n        message: \"As senhas não coincidem\"\r\n      })\r\n\r\n      .refine(data => {\r\n          return data.cep && data.cep.trim().length > 0; \r\n      }, {\r\n        path: ['cep'],\r\n        message: \"CEP é obrigatório\"\r\n    })\r\n\r\n    \r\n      \r\n    ///////////////validação de CPF//////////////////\r\n    const validarCPF_RG = (cpf_rg) => {\r\n      console.log(cpf_rg)\r\n      if (!cpf_rg) return false; // Se cpf_rg for undefined ou null, retorna false imediatamente.\r\n    \r\n      // Se o documento for CPF\r\n      else{\r\n        cpf_rg = cpf_rg.replace(/[^\\d]/g, \"\"); // Remove caracteres não numéricos\r\n    \r\n        // Verifica se o CPF tem 11 dígitos e não é uma sequência repetitiva\r\n        if (cpf_rg.length !== 11 || /^(\\d)\\1{10}$/.test(cpf_rg)) return false;\r\n    \r\n        // Calcula os dígitos verificadores do CPF\r\n        let sum = 0;\r\n        for (let i = 0; i < 9; i++) sum += parseInt(cpf_rg[i]) * (10 - i);\r\n        let firstVerifier = 11 - (sum % 11);\r\n        firstVerifier = (firstVerifier === 10 || firstVerifier === 11) ? 0 : firstVerifier;\r\n    \r\n        sum = 0;\r\n        for (let i = 0; i < 10; i++) sum += parseInt(cpf_rg[i]) * (11 - i);\r\n        let secondVerifier = 11 - (sum % 11);\r\n        secondVerifier = (secondVerifier === 10 || secondVerifier === 11) ? 0 : secondVerifier;\r\n    \r\n        // Compara os dígitos verificadores calculados com os do CPF\r\n        return cpf_rg[9] === firstVerifier.toString() && cpf_rg[10] === secondVerifier.toString();\r\n      }\r\n    \r\n      // Lógica para validar RG (ainda não implementada)\r\n    \r\n      return true; // Se não for nem CPF nem RG, retorna true\r\n    };\r\n    \r\n    //////////////////////////////////////////////////////////////\r\n    \r\n    ////////////////////////ENIO FORMULARIO///////////////////////\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        setValue,\r\n        reset,\r\n        formState: { errors }\r\n    } = useForm({\r\n        resolver: zodResolver(validar)\r\n    })\r\n\r\n    const enviarFormulario = async (dados) => {     \r\n        console.log(\"chamando a função\")\r\n        console.log(`dados ${JSON.stringify(dados)}`)\r\n        \r\n        if(editar){\r\n          try{\r\n            const cadastrar = await fetch(`${API_URL}/api/editarFuncionario`, {\r\n              method : 'POST',\r\n              headers : {\r\n                'Content-Type' : \"application/json\"\r\n              },\r\n              body : JSON.stringify(dados)\r\n            })\r\n\r\n            if(!cadastrar.ok){\r\n              //definir erros do alerta\r\n            }\r\n          }\r\n          catch (erro){\r\n            //definir erros do alerta\r\n          } \r\n        }\r\n        else{\r\n          try{\r\n            const cadastrar = await fetch(`${API_URL}/api/cadFuncionario`, {\r\n              method : 'POST',\r\n              headers : {\r\n                'Content-Type' : \"application/json\"\r\n              },\r\n              body : JSON.stringify(dados)\r\n            })\r\n\r\n            if(!cadastrar.ok){\r\n              //definir erros do alerta\r\n            }\r\n          }\r\n          catch (erro){\r\n            //definir erros do alerta\r\n          } \r\n        }\r\n\r\n\r\n    }\r\n\r\n    const onError = (errors) => {\r\n      console.log(\"❌ Erros de validação:\");\r\n      console.log(errors);\r\n    };\r\n\r\n    const formatDate = (date) => {\r\n      const data = new Date(date);\r\n      return data.toISOString().split('T')[0]; // Retorna apenas a parte da data (YYYY-MM-DD)\r\n    };\r\n\r\n    useEffect(() => {\r\n      buscarCargo();\r\n      \r\n      if (dadosFuncionarioParaEditar) {\r\n        setDadosFuncionario(dadosFuncionarioParaEditar);\r\n        setEditar(true)\r\n        setAutorizacaoFuncionario(dadosFuncionario.autorizacao)\r\n        setCargoFuncionario(dadosFuncionario.cargo)\r\n\r\n        reset({\r\n          nome : dadosFuncionario.nome || \"\",\r\n          dtNascimento : formatDate(dadosFuncionario.dtNascimento) || \"\",\r\n          nomeMae : dadosFuncionario.nomeMae || \"\",\r\n          nomePai : dadosFuncionario.nomePai || \"\",\r\n          email : dadosFuncionario.email || \"\",\r\n          senha : dadosFuncionario.senha || \"\",\r\n          confirmarSenha: dadosFuncionario.senha || \"\",\r\n          documento : dadosFuncionario.documento || \"\",\r\n          cargo : dadosFuncionario.cargo || \"\",\r\n          autorizacao : dadosFuncionario.autorizacao || \"\",\r\n          telefone : dadosFuncionario.telefone || \"\",\r\n          cep : dadosFuncionario.cep || \"\",\r\n          logradouro : dadosFuncionario.logradouro || \"\",\r\n          numero : dadosFuncionario.numero || \"\",\r\n          complemento : dadosFuncionario.complemento || \"\",\r\n          bairro : dadosFuncionario.bairro || \"\",\r\n          cidade : dadosFuncionario.cidade || \"\",\r\n          estado : dadosFuncionario.estado || \"\",\r\n          pais : dadosFuncionario.pais || \"\",\r\n        })\r\n        \r\n      }\r\n    }, [dadosFuncionarioParaEditar]);\r\n\r\n    /////////////////////////////////////////////////////////////////\r\n\r\n    return(\r\n        <>\r\n                <div className='form_content'>\r\n                    <form onSubmit={handleSubmit(enviarFormulario, onError)}>\r\n                        <div className='informacoePessoais'>\r\n                            <h5>Informações Pessoais</h5>\r\n                            <hr></hr>\r\n                            <div className='alinhar_content'>\r\n                                <div className='edit_label_input'>\r\n                                    <label className='alinhar_itens'>\r\n                                        <User size={18}/> Nome Completo\r\n                                    </label>\r\n                                    <input type='text' className='cadastro_input' id='nomeCompleto'  placeholder='Digite seu nome completo' {...register(\"nome\")}></input>\r\n                                    {errors.nome && <p>{errors.nome.message}</p>}\r\n                                </div>\r\n                                <div className='edit_label_input'>\r\n                                    <label className='alinhar_itens'>\r\n                                        <Calendar size={18} />Data de Nascimento\r\n                                    </label>\r\n                                    <input type='date' className='cadastro_input' id='dtNascimento' {...register('dtNascimento')} inputMode='numeric' pattern='[0-9]*'></input>\r\n                                    {errors.dtNascimento && <p>{errors.dtNascimento.message}</p>}\r\n                                </div>\r\n                                <div className='edit_label_input'>\r\n                                    <label className='alinhar_itens'>\r\n                                        <User size={18}/> Nome da Mãe\r\n                                    </label>\r\n                                    <input type='text' className='cadastro_input' id='nomeMae' placeholder='Digite o nome da mãe completo' {...register(\"nomeMae\")}></input>\r\n                                    {errors.nomeMae && <p>{errors.nomeMae.message}</p>}\r\n                                </div>\r\n                                <div className='edit_label_input'>\r\n                                    <label className='alinhar_itens'>\r\n                                        <User size={18}/> Nome do Pai\r\n                                    </label>\r\n                                    <input type='text' className='cadastro_input' id='nomePai'  placeholder='Digite o nome do pai completo' {...register(\"nomePai\")}></input>\r\n                                </div>\r\n\r\n                                <div className='edit_label_input'>\r\n                                    <label className='alinhar_itens'>\r\n                                        <Mail size={18}/> Email\r\n                                    </label>\r\n                                    <input type='mail' className='cadastro_input'  placeholder='Digite seu email' {...register(\"email\")}></input>\r\n                                    {errors.email && <p>{errors.email.message}</p>}\r\n                                </div>\r\n                                <div className='edit_label_input'>\r\n                                    <label className='alinhar_itens'>\r\n                                        <Lock size={18}/> Senha\r\n                                    </label>\r\n                                    <input type='password' className='cadastro_input'  placeholder='Digite sua senha' {...register(\"senha\")}></input>\r\n                                    {errors.senha && <p>{errors.senha.message}</p>}\r\n                                </div>\r\n                                <div className='edit_label_input'>\r\n                                  <label className='alinhar_itens'>\r\n                                    <IdCard size={18}/> Número do CPF\r\n                                  </label>\r\n                                  <input\r\n                                    type='text'\r\n                                    className='cadastro_input'\r\n                                    placeholder={`Digite seu número de CPF`}\r\n                                    \r\n                                    {...register(\"documento\")}\r\n                                    onChange={(e) => {\r\n                                      const value = e.target.value;\r\n                                      setCPF_RG(value); // Atualiza o estado com o valor\r\n                                      validarCPF_RG(value); // Passa o valor diretamente para a validação\r\n                                    }}\r\n                                    inputMode='numeric'\r\n                                    pattern='[0-9]*'\r\n                                  />\r\n                                    {errors.cpf_rg && <p>{errors.cpf_rg.message}</p>}\r\n                                </div>\r\n                                <div className='edit_label_input'>\r\n                                    <label className='alinhar_itens'>\r\n                                        <Lock size={18}/> Confirmar Senha\r\n                                    </label>\r\n                                    <input type='password' className='cadastro_input' placeholder='Confirme sua senha'  {...register(\"confirmarSenha\")}></input>\r\n                                    {errors.confirmarSenha && <p>{errors.confirmarSenha.message}</p>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='nacionalidade_documento'>\r\n                            <h5>Cargo e Autorização</h5>\r\n                            <hr></hr>\r\n                              <div className='alinhar_content'>\r\n                                    <div className='edit_label_input'>\r\n                                        <label className='alinhar_itens'>\r\n                                            <UserCog2 size={18}/>Cargo\r\n                                        </label>\r\n                                        <select id='cargo' {...(register('cargo', { valueAsNumber: true }))} value={dadosFuncionario.cargo || \"\"}>\r\n                                        <option value=\"\" selected>Selecione um cargo</option>\r\n                                          {cargos.map(cargos => (\r\n                                            <option key={cargos.id} value={(Number(cargos.id))} selected>\r\n                                              {cargos.nome}\r\n                                            </option> \r\n                                          ))}\r\n                                        </select>\r\n                                        {errors.cargo && <p>{errors.cargo.message}</p>}\r\n                                        {erroCargo && <p>Erro ao carregar os cargos</p>}\r\n                                    </div>\r\n                                <div className='edit_label_input'>\r\n                                  <label className='alinhar_itens' >\r\n                                    <KeyRound size={18}/>Autorização\r\n                                  </label>\r\n                                  <select id='autorizacao'  placeholder=\"Selecione o nível de autorização\" {...(register('autorizacao'))}>\r\n                                    <option value={\"2\"} >Autorização Padrão </option>\r\n                                    <option value={\"1\"}>Controle Total</option>\r\n                                  </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='contato_endereco'>\r\n                            <h5>Endereço e contato</h5>\r\n                            <hr></hr>\r\n                            <div className='alinhar_contato_endereco'>\r\n                                <div className='edit_label_input'>\r\n                                    <label className='alinhar_itens'>\r\n                                        <Phone size={18}/>Número de Telefone\r\n                                    </label>\r\n                                    <input type='text' className='cadastro_input' placeholder='Número de telefone com DDD'  {...register(\"telefone\")}></input>\r\n                                    {errors.telefone && <p>{errors.telefone.message}</p>}\r\n                                </div>\r\n\r\n                                <div className='edit_label_input'>\r\n                                    <label className='alinhar_itens'>\r\n                                        <MapPin size={18}/>CEP\r\n                                    </label>\r\n                                    <input type='text' className='cadastro_input' placeholder='Digite seu CEP' \r\n                                      {...register(\"cep\")}\r\n                                      onBlur={(e) => {\r\n                                        const novoCep = e.target.value;\r\n                                        setCep(novoCep);\r\n                                        setValue(\"cep\", novoCep); // sincroniza com react-hook-form\r\n                                        buscarCep(novoCep);\r\n                                      }}\r\n                                      \r\n                                      inputMode='numeric'\r\n                                      pattern='[0-9]*'\r\n                                      maxLength={8}\r\n                                    >\r\n\r\n                                    </input>\r\n                                    {errors.cep && <p>{errors.cep.message}</p>}\r\n                                </div>\r\n\r\n                                <div className='edit_label_input'>\r\n                                    <label className='alinhar_itens'>\r\n                                        <Home size={18}/>Logradouro\r\n                                    </label>\r\n                                    <input type='text' className='cadastro_input' placeholder='Nome da rua' value={dadosEndereco.logradouro} {...register(\"logradouro\")} onChange={() => {}}></input>\r\n                                    {errors.logradouro && <p>{errors.logradouro.message}</p>}\r\n                                </div>\r\n\r\n                                <div className='edit_label_input'>\r\n                                    <label className='alinhar_itens'>\r\n                                        <MapPinHouse size={18}/>Número\r\n                                    </label>\r\n                                    <input type='text' className='cadastro_input' placeholder='Número'  {...register(\"numero\")} inputMode='numeric' pattern='[0-9]*'></input>\r\n                                    {errors.numero && <p>{errors.numero.message}</p>}\r\n                                </div>\r\n\r\n                                <div className='edit_label_input'>\r\n                                    <label className='alinhar_itens'>\r\n                                        <Building size={18}/>Complemento\r\n                                    </label>\r\n                                    <input type='text' className='cadastro_input' placeholder='Apartamento, bloco, etc' {...register(\"complemento\")}></input>\r\n                                </div>\r\n\r\n                                <div className='edit_label_input'>\r\n                                    <label className='alinhar_itens'>\r\n                                        <Landmark size={18}/> Bairro\r\n                                    </label>\r\n                                    <input type='text' className='cadastro_input' placeholder='Bairro' value={dadosEndereco.bairro} {...register(\"bairro\")} onChange={() => {}}></input>\r\n                                    {errors.bairro && <p>{errors.bairro.message}</p>}\r\n                                </div>\r\n\r\n                                <div className='edit_label_input'>\r\n                                    <label className='alinhar_itens'>\r\n                                        <Building2 size={18}/>Cidade\r\n                                    </label>\r\n                                    <input type='text' className='cadastro_input' placeholder='Cidade' value={dadosEndereco.localidade} {...register(\"cidade\")} onChange={() => {}}></input>\r\n                                    {errors.cidade && <p>{errors.cidade.message}</p>}\r\n                                </div>\r\n\r\n                                <div className='edit_label_input'>\r\n                                    <label className='alinhar_itens'>\r\n                                        <MapPin size={18}/>Estado\r\n                                    </label>\r\n                                    <input type='text' className='cadastro_input' placeholder='Estado' value={dadosEndereco.estado} {...register(\"estado\")} onChange={() => {}}></input>\r\n                                    {errors.estado && <p>{errors.estado.message}</p>}\r\n                                </div>\r\n\r\n                                <div className='edit_label_input'>\r\n                                    <label className='alinhar_itens'>\r\n                                        <Flag size={18}/>País\r\n                                    </label>\r\n                                    <input type='text' className='cadastro_input' placeholder='País'  {...register(\"pais\")}></input>\r\n                                    {errors.pais && <p>{errors.pais.message}</p>}\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div >\r\n                            {editar == false &&<button type='submit' className='cadastro_button'>Finalizar Cadastro</button>}\r\n                            {editar == true &&<button type='submit' className='cadastro_button'>Salvar Dados</button>}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CadFuncionario"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}