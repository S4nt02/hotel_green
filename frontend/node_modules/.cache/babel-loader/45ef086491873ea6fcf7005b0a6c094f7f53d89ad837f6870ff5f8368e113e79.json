{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\netin\\\\hotel_green\\\\frontend\\\\src\\\\pages\\\\recover_senha\\\\recoverPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecoverPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [mensagem, setMensagem] = useState('');\n  const [carregando, setCarregando] = useState(false);\n  const RecoverPage = async () => {\n    setCarregando(true);\n    setMensagem('');\n    try {\n      const resposta = await fetch('http://localhost:8080/verificar-email', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const dados = await resposta.json();\n      if (dados.existe) {\n        setMensagem('✅ Email encontrado no sistema!');\n      } else {\n        setMensagem('❌ Email não encontrado.');\n      }\n    } catch (error) {\n      setMensagem('Erro ao verificar email.');\n    }\n    setCarregando(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Verificar Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Digite o email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: verificarEmail,\n      style: styles.button,\n      disabled: carregando,\n      children: carregando ? 'Verificando...' : 'Verificar'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(RecoverPage, \"MrrvNUopREClGB9WGqUTOIavWJw=\");\n_c = RecoverPage;\nconst styles = {\n  container: {\n    maxWidth: 400,\n    margin: '50px auto',\n    padding: 20,\n    border: '1px solid #ddd',\n    borderRadius: 10,\n    textAlign: 'center',\n    fontFamily: 'Arial'\n  },\n  input: {\n    width: '100%',\n    padding: 10,\n    fontSize: 16,\n    marginBottom: 10,\n    borderRadius: 5,\n    border: '1px solid #ccc'\n  },\n  button: {\n    padding: '10px 20px',\n    fontSize: 16,\n    borderRadius: 5,\n    backgroundColor: '#007bff',\n    color: 'white',\n    border: 'none',\n    cursor: 'pointer'\n  }\n};\nexport default RecoverPage;\nvar _c;\n$RefreshReg$(_c, \"RecoverPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RecoverPage","_s","email","setEmail","mensagem","setMensagem","carregando","setCarregando","resposta","fetch","method","headers","body","JSON","stringify","dados","json","existe","error","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","input","onClick","verificarEmail","button","disabled","_c","maxWidth","margin","padding","border","borderRadius","textAlign","fontFamily","width","fontSize","marginBottom","backgroundColor","color","cursor","$RefreshReg$"],"sources":["C:/Users/netin/hotel_green/frontend/src/pages/recover_senha/recoverPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction RecoverPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [mensagem, setMensagem] = useState('');\r\n  const [carregando, setCarregando] = useState(false);\r\n\r\n  const RecoverPage = async () => {\r\n    setCarregando(true);\r\n    setMensagem('');\r\n\r\n    try {\r\n      const resposta = await fetch('http://localhost:8080/verificar-email', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      const dados = await resposta.json();\r\n      if (dados.existe) {\r\n        setMensagem('✅ Email encontrado no sistema!');\r\n      } else {\r\n        setMensagem('❌ Email não encontrado.');\r\n      }\r\n    } catch (error) {\r\n      setMensagem('Erro ao verificar email.');\r\n    }\r\n\r\n    setCarregando(false);\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2>Verificar Email</h2>\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Digite o email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        style={styles.input}\r\n      />\r\n      <button onClick={verificarEmail} style={styles.button} disabled={carregando}>\r\n        {carregando ? 'Verificando...' : 'Verificar'}\r\n      </button>\r\n      <p>{mensagem}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    maxWidth: 400,\r\n    margin: '50px auto',\r\n    padding: 20,\r\n    border: '1px solid #ddd',\r\n    borderRadius: 10,\r\n    textAlign: 'center',\r\n    fontFamily: 'Arial',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    padding: 10,\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n    borderRadius: 5,\r\n    border: '1px solid #ccc',\r\n  },\r\n  button: {\r\n    padding: '10px 20px',\r\n    fontSize: 16,\r\n    borderRadius: 5,\r\n    backgroundColor: '#007bff',\r\n    color: 'white',\r\n    border: 'none',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nexport default RecoverPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}