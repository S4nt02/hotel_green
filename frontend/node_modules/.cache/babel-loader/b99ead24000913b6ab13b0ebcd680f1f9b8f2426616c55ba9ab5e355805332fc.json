{"ast":null,"code":"import React from'react';import{useEffect,useState}from'react';//import para recuperar dados do back\nimport{coerce,z}from'zod';import{zodResolver}from'@hookform/resolvers/zod';import{set,useForm}from'react-hook-form';import{API_URL}from'../../url';import{Key}from'lucide-react';import\"./cadAcomodacao.css\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function CadAcomodacoes(_ref){let{dadosAcomodacaoParaEditar,aoAlterar}=_ref;const[dadosAcomodacao,setDadosAcomodacao]=useState(()=>dadosAcomodacaoParaEditar||{});const[acomodacoes,setAcomodacoes]=useState([]);const[idAcomodacao,setIdAcomodacao]=useState(\"\");const[editar,setEditar]=useState(false);const[tiposQuartos,setTiposQuartos]=useState([]);const[alertOpen,setAlertModal]=useState(false);const[alertMensagem,setAlertMensagem]=useState(\"\");const[unidades,setUnidades]=useState([]);const[erroQuantidade,setErroQuantidade]=useState(\"\");const validarAcomodacao=z.object({numAcomodacao:z.coerce.number().min(1,{message:\"Digite um número para a acomodação\"}),num_andar:z.coerce.number().min(1,{message:\"Digite o número do andar\"}),tpAcomodacao:z.coerce.number().min(1,{message:\"Selecione o tipo de acomodação\"}),unidade_hotel:z.coerce.number().min(1,{message:\"Selecione a Unidade do Hotel\"})});const buscarTpQuarto=async()=>{try{const buscarTiposQuartos=await fetch(`${API_URL}/api/buscarTipoQuartos`);const dados=await buscarTiposQuartos.json();if(!buscarTiposQuartos.ok){}setTiposQuartos(dados);}catch(erro){}};const buscarUnidade=async()=>{try{const buscarUnidade=await fetch(`${API_URL}/api/buscarUnidade`);const dados=await buscarUnidade.json();setUnidades(dados);}catch{}};/////////////Burro ta tendo que fazer a leitura duas vezes//////////////\nconst buscarAcomodacoes=async()=>{try{const buscarAcomodacoes=await fetch(`${API_URL}/api/buscarAcomodacoes`);const dados=await buscarAcomodacoes.json();if(!buscarAcomodacoes.ok){}setAcomodacoes(dados);}catch(erro){}};//////////////////////////////////////////////////////////////////////\nconst getTotalAcomodacoesPorTipoNaUnidade=(tpAcomodacaoId,unidadeHotelId,acomodacoes)=>{return acomodacoes.filter(a=>a.tpAcomodacao===tpAcomodacaoId&&a.unidade_hotel===unidadeHotelId).length;};const podeCadastrarAcomodacao=(tpAcomodacaoId,unidadeHotelId,tipoAcomodacoes,acomodacoes)=>{console.log(tpAcomodacaoId);console.log(unidadeHotelId);console.log(tipoAcomodacoes);console.log(acomodacoes);const tipo=tipoAcomodacoes.find(t=>t.id===tpAcomodacaoId&&t.unidade_hotel===unidadeHotelId);const totalCadastradas=getTotalAcomodacoesPorTipoNaUnidade(tpAcomodacaoId,unidadeHotelId,acomodacoes);if(!tipo)return\"Tipo de acomodação não corresponde a unidade do hotel\";return totalCadastradas<(tipo.quantidade_total||0);};useEffect(()=>{buscarTpQuarto();buscarUnidade();buscarAcomodacoes();},[]);// <- só busca os tipos de quarto uma vez ao montar\nuseEffect(()=>{if(dadosAcomodacaoParaEditar){setDadosAcomodacao(dadosAcomodacaoParaEditar);setIdAcomodacao(dadosAcomodacaoParaEditar.id);if(dadosAcomodacaoParaEditar.id){setEditar(true);}reset({numAcomodacao:dadosAcomodacaoParaEditar.numAcomodacao||\"\",num_andar:dadosAcomodacaoParaEditar.num_andar||\"\",tpAcomodacao:dadosAcomodacaoParaEditar.tpAcomodacao||\"\",unidade_hotel:dadosAcomodacaoParaEditar.unidade_hotel||\"\"});}},[dadosAcomodacaoParaEditar]);const onError=errors=>{console.log(\"❌ Erros de validação:\");console.log(errors);};const{register,handleSubmit,setValue,reset,watch,clearErrors,formState:{errors}}=useForm({resolver:zodResolver(validarAcomodacao)});const onSaveQuarto=async dados=>{const result=podeCadastrarAcomodacao(dados.tpAcomodacao,dados.unidade_hotel,tiposQuartos,acomodacoes);if(result===true){setAlertModal(true);setErroQuantidade(\"\");if(editar){dados.id=dadosAcomodacao.id;try{const cadastrarAcomodacao=await fetch(`${API_URL}/api/editarAcomodacao`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(dados)});if(!cadastrarAcomodacao.editado){setAlertMensagem(\"Acomodação editada com sucesso\");reset({numAcomodacao:\"\",num_andar:\"\",tpAcomodacao:\"\",unidade_hotel:\"\"});}else{setAlertMensagem(\"Erro ao editar acomodação\");}}catch(erro){setAlertMensagem(\"Erro ao cadastrar acomodação\");}}else{try{const cadastrarAcomodacao=await fetch(`${API_URL}/api/cadastrarAcomodacao`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(dados)});if(!cadastrarAcomodacao.sucesso){setAlertMensagem(\"Acomodação editada com sucesso\");reset({numAcomodacao:\"\",num_andar:\"\",tpAcomodacao:\"\",unidade_hotel:\"\"});}else{setAlertMensagem(\"Erro ao editar acomodação\");}}catch(erro){setAlertMensagem(\"Erro ao editar acomodação\");}}if(aoAlterar)aoAlterar();}else{if(result===false){setErroQuantidade(\"Quantidade máxima de acomodações cadastradas para esse tipo de quarto\");}else{setErroQuantidade(result);}}};const cancelarEdicao=()=>{setEditar(false);reset({numAcomodacao:\"\",num_andar:\"\",tpAcomodacao:\"\",unidade_hotel:\"\"});};const alertModal=()=>{setAlertModal(!alertOpen);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(onSaveQuarto,onError),className:\"tiposacomodacoes\",children:[erroQuantidade!==\"\"&&/*#__PURE__*/_jsx(\"p\",{children:erroQuantidade}),/*#__PURE__*/_jsx(\"h2\",{children:\"Acomoda\\xE7\\xF5es\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"numacomodacoes\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"N\\xFAmero da acomoda\\xE7\\xE3o:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Ex: 101\",...register('numAcomodacao')}),errors.numAcomodacao&&/*#__PURE__*/_jsx(\"p\",{children:errors.numAcomodacao.message})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Andar\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Ex: 1\",...register('num_andar')}),errors.num_andar&&/*#__PURE__*/_jsx(\"p\",{children:errors.num_andar.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tiposacomodacoes\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Tipos de acomoda\\xE7\\xF5es\"}),/*#__PURE__*/_jsxs(\"select\",{value:watch('tpAcomodacao')||\"\",...register('tpAcomodacao'),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Selecione o tipo de quarto\"}),tiposQuartos.map(tpQuarto=>/*#__PURE__*/_jsxs(\"option\",{value:tpQuarto.id,children:[tpQuarto.id,\" - \",tpQuarto.nomeAcomodacao]},tpQuarto.id))]}),errors.tpAcomodacao&&/*#__PURE__*/_jsx(\"p\",{children:errors.tpAcomodacao.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"unidades\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Unidade do Hotel\"}),/*#__PURE__*/_jsxs(\"select\",{value:watch('unidade_hotel')||\"\",...register('unidade_hotel'),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Selecione uma Unidade\"}),unidades.map(unidade=>/*#__PURE__*/_jsx(\"option\",{value:unidade.id,children:unidade.nomeUnidade},unidade.id))]}),errors.unidade_hotel&&/*#__PURE__*/_jsx(\"p\",{children:errors.unidade_hotel.message})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"cad_acomodacoes\",children:editar?\"Atualizar acomodação\":\"Cadastrar Acomodação\"}),editar&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:cancelarEdicao,children:\"Cancelar\"})]}),alertOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"overlay-modal2\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"alert-modal2\",children:[/*#__PURE__*/_jsx(\"h1\",{onClick:alertModal,children:\"X\"}),/*#__PURE__*/_jsx(\"p\",{children:alertMensagem})]})})]});}export default CadAcomodacoes;","map":{"version":3,"names":["React","useEffect","useState","coerce","z","zodResolver","set","useForm","API_URL","Key","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CadAcomodacoes","_ref","dadosAcomodacaoParaEditar","aoAlterar","dadosAcomodacao","setDadosAcomodacao","acomodacoes","setAcomodacoes","idAcomodacao","setIdAcomodacao","editar","setEditar","tiposQuartos","setTiposQuartos","alertOpen","setAlertModal","alertMensagem","setAlertMensagem","unidades","setUnidades","erroQuantidade","setErroQuantidade","validarAcomodacao","object","numAcomodacao","number","min","message","num_andar","tpAcomodacao","unidade_hotel","buscarTpQuarto","buscarTiposQuartos","fetch","dados","json","ok","erro","buscarUnidade","buscarAcomodacoes","getTotalAcomodacoesPorTipoNaUnidade","tpAcomodacaoId","unidadeHotelId","filter","a","length","podeCadastrarAcomodacao","tipoAcomodacoes","console","log","tipo","find","t","id","totalCadastradas","quantidade_total","reset","onError","errors","register","handleSubmit","setValue","watch","clearErrors","formState","resolver","onSaveQuarto","result","cadastrarAcomodacao","method","headers","body","JSON","stringify","editado","sucesso","cancelarEdicao","alertModal","children","onSubmit","className","type","placeholder","value","map","tpQuarto","nomeAcomodacao","unidade","nomeUnidade","onClick"],"sources":["C:/Users/andre/hotel_green/frontend/src/componetes/cadAcomodacao/cadAcomodacao.js"],"sourcesContent":["import React from 'react';\r\nimport { useEffect, useState } from 'react' //import para recuperar dados do back\r\nimport { coerce, z } from 'zod';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { set, useForm} from 'react-hook-form';\r\nimport { API_URL } from '../../url';\r\nimport { Key } from 'lucide-react';\r\nimport \"./cadAcomodacao.css\"\r\n\r\nfunction CadAcomodacoes ({dadosAcomodacaoParaEditar, aoAlterar}){\r\n\r\n    const [dadosAcomodacao, setDadosAcomodacao] = useState(() => dadosAcomodacaoParaEditar || {})\r\n    const [acomodacoes, setAcomodacoes] = useState([])\r\n    const [idAcomodacao, setIdAcomodacao] = useState(\"\")\r\n    const [editar, setEditar] = useState(false)\r\n    const [tiposQuartos, setTiposQuartos] = useState([])\r\n    const [alertOpen, setAlertModal] = useState(false)\r\n    const [alertMensagem, setAlertMensagem] = useState(\"\")\r\n    const [unidades, setUnidades] = useState([])\r\n    const [erroQuantidade, setErroQuantidade] = useState(\"\")\r\n\r\n    const validarAcomodacao = z.object({\r\n        numAcomodacao : z.coerce.number().min(1, { message: \"Digite um número para a acomodação\" }) ,\r\n        num_andar : z.coerce.number().min(1, { message: \"Digite o número do andar\" }),\r\n        tpAcomodacao : z.coerce.number().min(1, { message: \"Selecione o tipo de acomodação\" }) ,\r\n        unidade_hotel : z.coerce.number().min(1, { message: \"Selecione a Unidade do Hotel\" }) ,\r\n    })\r\n\r\n    const buscarTpQuarto = async () => {\r\n        try{\r\n            const buscarTiposQuartos = await fetch(`${API_URL}/api/buscarTipoQuartos`,)\r\n            const dados = await buscarTiposQuartos.json()\r\n\r\n            if(!buscarTiposQuartos.ok){\r\n                \r\n            }\r\n\r\n            setTiposQuartos(dados)\r\n        }\r\n        catch(erro){\r\n            \r\n        }\r\n    }\r\n\r\n    const buscarUnidade = async () => {\r\n        try{\r\n            const buscarUnidade = await fetch(`${API_URL}/api/buscarUnidade`)\r\n            const dados = await buscarUnidade.json()\r\n\r\n            setUnidades(dados)\r\n        }\r\n        catch{\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /////////////Burro ta tendo que fazer a leitura duas vezes//////////////\r\n    const buscarAcomodacoes = async () => {\r\n        try{\r\n        const buscarAcomodacoes = await fetch(`${API_URL}/api/buscarAcomodacoes`,)\r\n        const dados = await buscarAcomodacoes.json()\r\n\r\n        if(!buscarAcomodacoes.ok){\r\n                \r\n        }\r\n\r\n            setAcomodacoes(dados)\r\n        }\r\n        catch(erro){\r\n            \r\n        }\r\n    }\r\n\r\n//////////////////////////////////////////////////////////////////////\r\n\r\n    const getTotalAcomodacoesPorTipoNaUnidade = (tpAcomodacaoId, unidadeHotelId, acomodacoes) => {\r\n        return acomodacoes.filter(\r\n            a => a.tpAcomodacao === tpAcomodacaoId && a.unidade_hotel === unidadeHotelId\r\n        ).length;\r\n    };\r\n\r\n    const podeCadastrarAcomodacao = (tpAcomodacaoId, unidadeHotelId, tipoAcomodacoes, acomodacoes) => {\r\n        console.log(tpAcomodacaoId)\r\n        console.log(unidadeHotelId)\r\n        console.log(tipoAcomodacoes)\r\n        console.log(acomodacoes)\r\n        const tipo = tipoAcomodacoes.find(\r\n            t => t.id === tpAcomodacaoId && t.unidade_hotel === unidadeHotelId\r\n        );\r\n        const totalCadastradas = getTotalAcomodacoesPorTipoNaUnidade(tpAcomodacaoId, unidadeHotelId, acomodacoes);\r\n\r\n        if (!tipo) return (\"Tipo de acomodação não corresponde a unidade do hotel\");\r\n\r\n        return totalCadastradas < (tipo.quantidade_total || 0);\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        buscarTpQuarto();\r\n        buscarUnidade();\r\n        buscarAcomodacoes()\r\n    }, []); // <- só busca os tipos de quarto uma vez ao montar\r\n\r\n    useEffect(() => {\r\n        if(dadosAcomodacaoParaEditar){\r\n            setDadosAcomodacao(dadosAcomodacaoParaEditar)\r\n            setIdAcomodacao(dadosAcomodacaoParaEditar.id)\r\n            if(dadosAcomodacaoParaEditar.id){\r\n                setEditar(true)\r\n            }\r\n\r\n            reset({\r\n                numAcomodacao: dadosAcomodacaoParaEditar.numAcomodacao || \"\",\r\n                num_andar: dadosAcomodacaoParaEditar.num_andar || \"\",\r\n                tpAcomodacao: dadosAcomodacaoParaEditar.tpAcomodacao || \"\",\r\n                unidade_hotel: dadosAcomodacaoParaEditar.unidade_hotel || \"\",\r\n            })\r\n            \r\n\r\n\r\n        }\r\n    }, [dadosAcomodacaoParaEditar])\r\n\r\n\r\n    const onError = (errors) => {\r\n        console.log(\"❌ Erros de validação:\");\r\n        console.log(errors);\r\n    };\r\n\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        setValue,\r\n        reset,\r\n        watch,\r\n        clearErrors,\r\n        formState: { errors }\r\n    } = useForm({\r\n        resolver: zodResolver(validarAcomodacao)\r\n    })\r\n\r\n    const onSaveQuarto = async (dados) =>{\r\n        const result = podeCadastrarAcomodacao(dados.tpAcomodacao, dados.unidade_hotel, tiposQuartos, acomodacoes)\r\n\r\n        if( result === true){\r\n            setAlertModal(true)\r\n            setErroQuantidade(\"\")\r\n            if(editar){\r\n                dados.id = dadosAcomodacao.id\r\n                try{\r\n                    const cadastrarAcomodacao = await fetch(`${API_URL}/api/editarAcomodacao`,{\r\n                        method : 'POST',\r\n                        headers : {\r\n                            'Content-Type' : 'application/json'\r\n                        },\r\n                        body : JSON.stringify(dados)\r\n                    })\r\n\r\n                    if(!cadastrarAcomodacao.editado){\r\n                        setAlertMensagem(\"Acomodação editada com sucesso\")\r\n                        reset({\r\n                            numAcomodacao: \"\",\r\n                            num_andar: \"\",\r\n                            tpAcomodacao: \"\",\r\n                            unidade_hotel: \"\",\r\n                        });\r\n                    }\r\n                    else{\r\n                        setAlertMensagem(\"Erro ao editar acomodação\")\r\n                    }\r\n\r\n                    \r\n\r\n                }\r\n                catch(erro){\r\n                    setAlertMensagem(\"Erro ao cadastrar acomodação\")\r\n                }\r\n\r\n            }\r\n            else{\r\n                try{\r\n                    const cadastrarAcomodacao = await fetch(`${API_URL}/api/cadastrarAcomodacao`,{\r\n                        method : 'POST',\r\n                        headers : {\r\n                            'Content-Type' : 'application/json'\r\n                        },\r\n                        body : JSON.stringify(dados)\r\n                    })\r\n\r\n                    if(!cadastrarAcomodacao.sucesso){\r\n                        setAlertMensagem(\"Acomodação editada com sucesso\")\r\n                        reset({\r\n                            numAcomodacao: \"\",\r\n                            num_andar: \"\",\r\n                            tpAcomodacao: \"\",\r\n                            unidade_hotel: \"\",\r\n                        });\r\n                    }\r\n                    else{\r\n                        setAlertMensagem(\"Erro ao editar acomodação\")\r\n                    }\r\n\r\n                    \r\n\r\n                }\r\n                catch(erro){\r\n                    setAlertMensagem(\"Erro ao editar acomodação\")\r\n                }\r\n            }\r\n\r\n            if (aoAlterar) aoAlterar()\r\n        }\r\n        else{\r\n\r\n            if(result === false){\r\n                setErroQuantidade(\"Quantidade máxima de acomodações cadastradas para esse tipo de quarto\")\r\n            }\r\n            else{\r\n                setErroQuantidade(result)\r\n            }\r\n            \r\n        }\r\n        \r\n       \r\n\r\n    }\r\n\r\n    const cancelarEdicao = () => {\r\n        setEditar(false);\r\n        reset({\r\n            numAcomodacao: \"\",\r\n            num_andar: \"\",\r\n            tpAcomodacao: \"\",\r\n            unidade_hotel: \"\",\r\n        });\r\n    };\r\n\r\n    const alertModal = () => {\r\n        setAlertModal(!alertOpen)\r\n    }\r\n\r\n    return(\r\n        <>\r\n        \r\n        <form onSubmit={handleSubmit(onSaveQuarto, onError)} className=\"tiposacomodacoes\">\r\n            {erroQuantidade !== \"\" && <p>{erroQuantidade}</p>}\r\n            <h2>Acomodações</h2>\r\n            <div className=\"numacomodacoes\">\r\n            <label>Número da acomodação:</label>\r\n            <input \r\n            type=\"number\" \r\n            placeholder=\"Ex: 101\" \r\n            {...register('numAcomodacao')}\r\n            />\r\n             {errors.numAcomodacao && <p>{errors.numAcomodacao.message}</p>}\r\n            </div>\r\n\r\n            <div>\r\n            <label>Andar</label>\r\n            <input \r\n            type=\"number\" \r\n            placeholder=\"Ex: 1\" \r\n            {...register('num_andar')}\r\n            />\r\n             {errors.num_andar && <p>{errors.num_andar.message}</p>}\r\n            </div>\r\n\r\n            <div className=\"tiposacomodacoes\">\r\n            <label >\r\n            Tipos de acomodações      \r\n            </label>\r\n            {/* {trazer tp dados do tp acomodacoes} */}\r\n            <select value={watch('tpAcomodacao')||\"\"} {...register('tpAcomodacao')} >\r\n                <option value={\"\"}>Selecione o tipo de quarto</option>\r\n                {tiposQuartos.map(tpQuarto => (\r\n                    <option key={tpQuarto.id} value={tpQuarto.id}>\r\n                        {tpQuarto.id} - {tpQuarto.nomeAcomodacao}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n             {errors.tpAcomodacao && <p>{errors.tpAcomodacao.message}</p>}\r\n            </div>\r\n\r\n            <div className=\"unidades\">\r\n            <label>Unidade do Hotel</label>\r\n            <select value={watch('unidade_hotel')||\"\"} {...register('unidade_hotel')}>\r\n                    <option value={\"\"}>Selecione uma Unidade</option>\r\n                    {unidades.map(unidade =>(\r\n                        <option key={unidade.id} value={unidade.id}>{unidade.nomeUnidade}</option>\r\n                    ))}\r\n\r\n            </select>\r\n             {errors.unidade_hotel && <p>{errors.unidade_hotel.message}</p>}\r\n            </div>\r\n            \r\n            <button type='submit' className='cad_acomodacoes'>{editar ? \"Atualizar acomodação\" : \"Cadastrar Acomodação\"}</button>\r\n             {editar && (<button type=\"button\" onClick={cancelarEdicao}>Cancelar</button>)}\r\n        </form>\r\n            {alertOpen && (\r\n                <div className='overlay-modal2'>\r\n                    <div className='alert-modal2'>\r\n                        <h1 onClick={alertModal}>X</h1>\r\n                         <p>{alertMensagem}</p>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CadAcomodacoes"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}