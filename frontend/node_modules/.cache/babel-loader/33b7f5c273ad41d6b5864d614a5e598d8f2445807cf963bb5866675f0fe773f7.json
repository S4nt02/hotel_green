{"ast":null,"code":"import React from'react';import{useEffect,useState}from'react';//import para recuperar dados do back\nimport{coerce,z}from'zod';import{zodResolver}from'@hookform/resolvers/zod';import{set,useForm}from'react-hook-form';import{API_URL}from'../../url';import{Key}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function CadCategoria(){const[categorias,setCategorias]=useState([]);const[idEditando,setIdEditando]=useState(null);const validarCategoria=z.object({categoria:z.string().min(1,{message:\"O campo categoria não pode ser vazio\"})});const{register,handleSubmit,setValue,reset,watch,clearErrors,formState:{errors}}=useForm({resolver:zodResolver(validarCategoria)});const onError=errors=>{console.log(\"❌ Erros de validação:\");console.log(errors);};const cadastrarCategoria=async dados=>{try{const cadCategoria=await fetch(`${API_URL}/api/cadCategoria`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(dados)});if(!cadCategoria.sucesso){}reset({categoria:\"\"});}catch{}buscarCategoria();};const buscarCategoria=async()=>{try{const buscarCategoria=await fetch(`${API_URL}/api/buscarCategoria`);const dados=await buscarCategoria.json();setCategorias(dados);}catch{}};const editarCategoria=async dados=>{dados.id=idEditando;try{const editarCategoria=await fetch(`${API_URL}/api/editarCategoria`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(dados)});if(!editarCategoria.sucesso){setIdEditando(null);reset({categoria:\"\"});buscarCategoria();}}catch{}};const excluirCategoria=async id=>{try{const excluirCategoria=await fetch(`${API_URL}/api/excluirCategoria`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({id})});if(excluirCategoria.excluido){}}catch{}buscarCategoria();};useEffect(()=>{buscarCategoria();},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(cadastrarCategoria,onError),children:[/*#__PURE__*/_jsx(\"label\",{children:\"Adicionar Categoria\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Nome da categoria\",...register(\"categoria\")}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Adicionar\"}),errors.categoria&&/*#__PURE__*/_jsx(\"p\",{children:errors.categoria.message})]})}),/*#__PURE__*/_jsx(\"div\",{children:categorias.map(categoria=>/*#__PURE__*/_jsx(\"div\",{children:idEditando===categoria.id?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(editarCategoria,onError),children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",...register(\"categoriaEdit\")}),errors.categoriaEdit&&/*#__PURE__*/_jsx(\"p\",{children:errors.categoriaEdit.message}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Salvar\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setIdEditando(null),children:\"Cancelar\"})]})}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:categoria.nomeCategoria}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setIdEditando(categoria.id);setValue(\"categoriaEdit\",categoria.nomeCategoria);},children:\"Editar\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>excluirCategoria(categoria.id),children:\"Excluir\"})]})},categoria.id))})]});}export default CadCategoria;","map":{"version":3,"names":["React","useEffect","useState","coerce","z","zodResolver","set","useForm","API_URL","Key","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CadCategoria","categorias","setCategorias","idEditando","setIdEditando","validarCategoria","object","categoria","string","min","message","register","handleSubmit","setValue","reset","watch","clearErrors","formState","errors","resolver","onError","console","log","cadastrarCategoria","dados","cadCategoria","fetch","method","headers","body","JSON","stringify","sucesso","buscarCategoria","json","editarCategoria","id","excluirCategoria","excluido","children","onSubmit","type","placeholder","map","categoriaEdit","onClick","nomeCategoria"],"sources":["C:/Users/andre/hotel_green/frontend/src/componetes/cad_categoria/cad_categoria.js"],"sourcesContent":["import React from 'react';\r\nimport { useEffect, useState } from 'react' //import para recuperar dados do back\r\nimport { coerce, z } from 'zod';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { set, useForm} from 'react-hook-form';\r\nimport { API_URL } from '../../url';\r\nimport { Key } from 'lucide-react';\r\n\r\nfunction CadCategoria (){\r\n\r\n    const [categorias, setCategorias] = useState([])\r\n    const [idEditando, setIdEditando] = useState(null);\r\n\r\n    const validarCategoria = z.object({\r\n        categoria : z.string().min(1, {message : \"O campo categoria não pode ser vazio\"}),\r\n    })\r\n\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        setValue,\r\n        reset,\r\n        watch,\r\n        clearErrors,\r\n        formState: { errors }\r\n    } = useForm({\r\n        resolver: zodResolver(validarCategoria)\r\n    })\r\n\r\n    const onError = (errors) => {\r\n        console.log(\"❌ Erros de validação:\");\r\n        console.log(errors);\r\n    };\r\n\r\n    const cadastrarCategoria = async (dados) => {\r\n        try{\r\n            const cadCategoria = await fetch(`${API_URL}/api/cadCategoria`, {\r\n                method : 'POST',\r\n                headers : {\r\n                    'Content-Type' : 'application/json'\r\n                },\r\n                body : JSON.stringify(dados)\r\n            })\r\n\r\n            if(!cadCategoria.sucesso){\r\n\r\n            }\r\n\r\n            reset({\r\n                categoria : \"\"\r\n            })\r\n\r\n        }\r\n        catch{\r\n\r\n        }\r\n        buscarCategoria()\r\n    }\r\n\r\n    const buscarCategoria = async () => {\r\n        try{\r\n            const buscarCategoria = await fetch(`${API_URL}/api/buscarCategoria`)\r\n            const dados = await buscarCategoria.json()\r\n\r\n            setCategorias(dados)\r\n        }\r\n        catch{\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const editarCategoria = async (dados) => {\r\n        dados.id = idEditando\r\n        try{\r\n            const editarCategoria = await fetch(`${API_URL}/api/editarCategoria`, {\r\n                method : 'POST',\r\n                headers : {\r\n                    'Content-Type' : 'application/json'\r\n                },\r\n                body : JSON.stringify(dados)\r\n            })\r\n\r\n            if(!editarCategoria.sucesso){\r\n                setIdEditando(null)\r\n                reset({\r\n                    categoria : \"\"\r\n                })\r\n                buscarCategoria()\r\n            }\r\n        }\r\n        catch{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    const excluirCategoria = async (id) => {\r\n        try{\r\n            const excluirCategoria = await fetch(`${API_URL}/api/excluirCategoria`, {\r\n                method : 'POST',\r\n                headers : {\r\n                    'Content-Type' : 'application/json'\r\n                },\r\n                body : JSON.stringify({id})\r\n            })\r\n\r\n            if(excluirCategoria.excluido){\r\n\r\n            }\r\n        }   \r\n        catch{\r\n\r\n        }\r\n\r\n        buscarCategoria()\r\n    }\r\n\r\n    useEffect(() => {\r\n        buscarCategoria()\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <div>\r\n                <form onSubmit={handleSubmit(cadastrarCategoria, onError)}>\r\n                    <label>Adicionar Categoria</label>\r\n                    <input type='text' placeholder='Nome da categoria' {...register(\"categoria\")}></input>\r\n                    <button type='submit'>Adicionar</button>\r\n                    {errors.categoria && <p>{errors.categoria.message}</p>}\r\n                </form>\r\n            </div>\r\n            <div>\r\n                {categorias.map((categoria) => (\r\n                <div key={categoria.id}>\r\n                    {idEditando === categoria.id ? (\r\n                    <>  \r\n                        <form onSubmit={handleSubmit(editarCategoria, onError)}>\r\n                            <input\r\n                                type=\"text\"\r\n                                {...register(\"categoriaEdit\")}\r\n                            />\r\n                            {errors.categoriaEdit && <p>{errors.categoriaEdit.message}</p>}\r\n                            <button type=\"submit\">Salvar</button>\r\n                            <button type=\"button\" onClick={() => setIdEditando(null)}>Cancelar</button>\r\n                        </form>\r\n\r\n                    </>\r\n                    ) : (\r\n                    <>\r\n                        <p>{categoria.nomeCategoria}</p>\r\n                        <button \r\n                            onClick={() => {\r\n                            setIdEditando(categoria.id);\r\n                            setValue(\"categoriaEdit\", categoria.nomeCategoria);\r\n                            }}>Editar\r\n                        </button>\r\n                        <button onClick={() => excluirCategoria(categoria.id)}>Excluir</button>\r\n                    </>\r\n                    )}\r\n                </div>\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CadCategoria"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}