{"ast":null,"code":"// 'mime-score' back-ported to CommonJS\n\n// Score RFC facets (see https://tools.ietf.org/html/rfc6838#section-3)\nvar FACET_SCORES = {\n  'prs.': 100,\n  'x-': 200,\n  'x.': 300,\n  'vnd.': 400,\n  default: 900\n};\n\n// Score mime source (Logic originally from `jshttp/mime-types` module)\nvar SOURCE_SCORES = {\n  nginx: 10,\n  apache: 20,\n  iana: 40,\n  default: 30 // definitions added by `jshttp/mime-db` project?\n};\nvar TYPE_SCORES = {\n  // prefer application/xml over text/xml\n  // prefer application/rtf over text/rtf\n  application: 1,\n  // prefer font/woff over application/font-woff\n  font: 2,\n  default: 0\n};\n\n/**\r\n * Get each component of the score for a mime type.  The sum of these is the\r\n * total score.  The higher the score, the more \"official\" the type.\r\n */\nmodule.exports = function mimeScore(mimeType) {\n  let source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n  if (mimeType === 'application/octet-stream') {\n    return 0;\n  }\n  const [type, subtype] = mimeType.split('/');\n  const facet = subtype.replace(/(\\.|x-).*/, '$1');\n  const facetScore = FACET_SCORES[facet] || FACET_SCORES.default;\n  const sourceScore = SOURCE_SCORES[source] || SOURCE_SCORES.default;\n  const typeScore = TYPE_SCORES[type] || TYPE_SCORES.default;\n\n  // All else being equal prefer shorter types\n  const lengthScore = 1 - mimeType.length / 100;\n  return facetScore + sourceScore + typeScore + lengthScore;\n};","map":{"version":3,"names":["FACET_SCORES","default","SOURCE_SCORES","nginx","apache","iana","TYPE_SCORES","application","font","module","exports","mimeScore","mimeType","source","arguments","length","undefined","type","subtype","split","facet","replace","facetScore","sourceScore","typeScore","lengthScore"],"sources":["C:/Users/andre/hotel_green/frontend/node_modules/express/node_modules/mime-types/mimeScore.js"],"sourcesContent":["// 'mime-score' back-ported to CommonJS\r\n\r\n// Score RFC facets (see https://tools.ietf.org/html/rfc6838#section-3)\r\nvar FACET_SCORES = {\r\n  'prs.': 100,\r\n  'x-': 200,\r\n  'x.': 300,\r\n  'vnd.': 400,\r\n  default: 900\r\n}\r\n\r\n// Score mime source (Logic originally from `jshttp/mime-types` module)\r\nvar SOURCE_SCORES = {\r\n  nginx: 10,\r\n  apache: 20,\r\n  iana: 40,\r\n  default: 30 // definitions added by `jshttp/mime-db` project?\r\n}\r\n\r\nvar TYPE_SCORES = {\r\n  // prefer application/xml over text/xml\r\n  // prefer application/rtf over text/rtf\r\n  application: 1,\r\n\r\n  // prefer font/woff over application/font-woff\r\n  font: 2,\r\n\r\n  default: 0\r\n}\r\n\r\n/**\r\n * Get each component of the score for a mime type.  The sum of these is the\r\n * total score.  The higher the score, the more \"official\" the type.\r\n */\r\nmodule.exports = function mimeScore (mimeType, source = 'default') {\r\n  if (mimeType === 'application/octet-stream') {\r\n    return 0\r\n  }\r\n\r\n  const [type, subtype] = mimeType.split('/')\r\n\r\n  const facet = subtype.replace(/(\\.|x-).*/, '$1')\r\n\r\n  const facetScore = FACET_SCORES[facet] || FACET_SCORES.default\r\n  const sourceScore = SOURCE_SCORES[source] || SOURCE_SCORES.default\r\n  const typeScore = TYPE_SCORES[type] || TYPE_SCORES.default\r\n\r\n  // All else being equal prefer shorter types\r\n  const lengthScore = 1 - mimeType.length / 100\r\n\r\n  return facetScore + sourceScore + typeScore + lengthScore\r\n}\r\n"],"mappings":"AAAA;;AAEA;AACA,IAAIA,YAAY,GAAG;EACjB,MAAM,EAAE,GAAG;EACX,IAAI,EAAE,GAAG;EACT,IAAI,EAAE,GAAG;EACT,MAAM,EAAE,GAAG;EACXC,OAAO,EAAE;AACX,CAAC;;AAED;AACA,IAAIC,aAAa,GAAG;EAClBC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,EAAE;EACVC,IAAI,EAAE,EAAE;EACRJ,OAAO,EAAE,EAAE,CAAC;AACd,CAAC;AAED,IAAIK,WAAW,GAAG;EAChB;EACA;EACAC,WAAW,EAAE,CAAC;EAEd;EACAC,IAAI,EAAE,CAAC;EAEPP,OAAO,EAAE;AACX,CAAC;;AAED;AACA;AACA;AACA;AACAQ,MAAM,CAACC,OAAO,GAAG,SAASC,SAASA,CAAEC,QAAQ,EAAsB;EAAA,IAApBC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,SAAS;EAC/D,IAAIF,QAAQ,KAAK,0BAA0B,EAAE;IAC3C,OAAO,CAAC;EACV;EAEA,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAACO,KAAK,CAAC,GAAG,CAAC;EAE3C,MAAMC,KAAK,GAAGF,OAAO,CAACG,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC;EAEhD,MAAMC,UAAU,GAAGtB,YAAY,CAACoB,KAAK,CAAC,IAAIpB,YAAY,CAACC,OAAO;EAC9D,MAAMsB,WAAW,GAAGrB,aAAa,CAACW,MAAM,CAAC,IAAIX,aAAa,CAACD,OAAO;EAClE,MAAMuB,SAAS,GAAGlB,WAAW,CAACW,IAAI,CAAC,IAAIX,WAAW,CAACL,OAAO;;EAE1D;EACA,MAAMwB,WAAW,GAAG,CAAC,GAAGb,QAAQ,CAACG,MAAM,GAAG,GAAG;EAE7C,OAAOO,UAAU,GAAGC,WAAW,GAAGC,SAAS,GAAGC,WAAW;AAC3D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}