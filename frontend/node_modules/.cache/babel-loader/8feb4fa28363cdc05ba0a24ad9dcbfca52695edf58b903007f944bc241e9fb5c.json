{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\hotel_green\\\\frontend\\\\src\\\\pages\\\\funcionario\\\\funcionarioPage.js\",\n  _s = $RefreshSig$();\nimport HeaderComponente from \"../../componetes/header/headerComponente\";\nimport CadFuncionario from \"../../componetes/cad_funcionario/cadFuncionario\";\nimport React, { use, useState, useEffect } from 'react';\nimport \"./funcionarioPage.css\";\nimport { API_URL } from \"../../url\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FuncionarioPage() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [funcionarios, setFuncionarios] = useState([]);\n  const abrirModal = () => {\n    setIsOpen(!isOpen);\n  };\n  useEffect(() => {\n    const buscarFuncionarios = async () => {\n      try {\n        const resposta = await fetch(`${API_URL}/funcionarios`, {\n          method: 'POST'\n        });\n        const dados = await resposta.json();\n        setFuncionarios(dados);\n      } catch (erro) {\n        console.error(\"Erro ao buscar funcionários:\", erro);\n      }\n    };\n    console.log(funcionarios);\n    buscarFuncionarios();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderComponente, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: abrirModal,\n        children: \"CADASTRAR FUNCIONARIO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), funcionarios.map(funcionario => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [funcionario.id, \" - \", funcionario.nome]\n      }, funcionario.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: abrirModal,\n            className: \"fechar-cad-funcioanrio\",\n            children: \"FECHAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Novo Funcion\\xE1rio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CadFuncionario, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(FuncionarioPage, \"ZrRlPHiqw7qmX4qH2rmvl53TJZ8=\");\n_c = FuncionarioPage;\nexport default FuncionarioPage;\nvar _c;\n$RefreshReg$(_c, \"FuncionarioPage\");","map":{"version":3,"names":["HeaderComponente","CadFuncionario","React","use","useState","useEffect","API_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","FuncionarioPage","_s","isOpen","setIsOpen","funcionarios","setFuncionarios","abrirModal","buscarFuncionarios","resposta","fetch","method","dados","json","erro","console","error","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","funcionario","id","nome","_c","$RefreshReg$"],"sources":["C:/Users/andre/hotel_green/frontend/src/pages/funcionario/funcionarioPage.js"],"sourcesContent":["import HeaderComponente from \"../../componetes/header/headerComponente\"\r\nimport CadFuncionario from \"../../componetes/cad_funcionario/cadFuncionario\"\r\nimport React, { use, useState, useEffect } from 'react';\r\nimport \"./funcionarioPage.css\"\r\n\r\nimport { API_URL } from \"../../url\";\r\n\r\n\r\n\r\nfunction FuncionarioPage () {\r\n\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [funcionarios, setFuncionarios] = useState([])\r\n\r\n  const abrirModal  = () => {\r\n    setIsOpen(!isOpen)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const buscarFuncionarios = async () => {\r\n      try {\r\n        const resposta = await fetch(`${API_URL}/funcionarios` , {\r\n          method: 'POST'\r\n        });\r\n        const dados = await resposta.json();\r\n        setFuncionarios(dados);\r\n      } catch (erro) {\r\n        console.error(\"Erro ao buscar funcionários:\", erro);\r\n      }\r\n    };\r\n    console.log(funcionarios)\r\n    buscarFuncionarios();\r\n  }, []);\r\n\r\n  return(\r\n    <>\r\n      <HeaderComponente />\r\n      <main className=\"main-content\">\r\n        <button onClick={abrirModal}>CADASTRAR FUNCIONARIO</button>\r\n        {funcionarios.map((funcionario) => (\r\n          <li key={funcionario.id}>\r\n            {funcionario.id} - {funcionario.nome}\r\n          </li>\r\n        ))}\r\n        {isOpen && (\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal-content\">\r\n              <button onClick={abrirModal} className=\"fechar-cad-funcioanrio\">FECHAR</button>\r\n              <h2>Novo Funcionário</h2>\r\n              <CadFuncionario />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FuncionarioPage"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}